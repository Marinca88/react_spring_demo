{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmrtViewQuestion.js\",\n    _s = $RefreshSig$();\n\nimport ViewQuestion from '../presentational/ViewQuestion';\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter';\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartViewQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    tags: [],\n    createTime: \"\"\n  });\n  const {\n    index\n  } = useParams();\n  const [text, setText] = useState({\n    text: \"\",\n    authorUsername: \"\",\n    createTime: \"\",\n    referenceQuestion: null\n  });\n  const [chAnsware, setChAnsware] = useState({\n    ind: null\n  });\n  useEffect(() => {\n    setQuestion(QuestionPresenterInstance.getQuestionById(index));\n  }, []);\n  const answares = AnswarePresenterInstance.getAnsware(index);\n\n  const onChangeTextArea = (property, newValue) => {\n    setText({ ...text,\n      [property]: newValue\n    });\n  };\n\n  const changeChAnsware = newValue => {\n    setChAnsware({\n      ind: newValue\n    });\n  };\n\n  const onAddAnsware = () => {\n    setText({ ...text,\n      authorUsername: AppPresenterInstance.getLoggedUser(),\n      createTime: moment(Date.now()).format(\"YYYY-MM-DD HH:MM:SS\"),\n      referenceQuestion: index\n    });\n    AnswarePresenterInstance.addAnsware(text);\n    console.log(AnswarePresenterInstance.getAnsware().toString());\n  };\n\n  const onOpenEditAnsware = (proprety, newValue) => {\n    setText({ ...text,\n      [proprety]: newValue\n    });\n  };\n\n  const onEditAnsware = () => {\n    AnswarePresenterInstance.editAnsware(chAnsware.ind, text.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ViewQuestion, {\n    title: question.title,\n    body: question.body,\n    createTime: question.createTime,\n    tags: question.tags,\n    answares: answares,\n    text: text.text,\n    onChangeTextArea: onChangeTextArea,\n    onAddAnsware: onAddAnsware,\n    onOpenEditAnsware: onOpenEditAnsware,\n    onEditAnsware: onEditAnsware,\n    changeChAnsware: changeChAnsware\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SmartViewQuestion, \"rqNCeHpjjuBEqG6eMfOvcXy3CeM=\", false, function () {\n  return [useParams];\n});\n\n_c = SmartViewQuestion;\n;\nexport default SmartViewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartViewQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmrtViewQuestion.js"],"names":["ViewQuestion","AnswarePresenterInstance","QuestionPresenterInstance","AppPresenterInstance","useEffect","useState","useParams","moment","SmartViewQuestion","question","setQuestion","title","body","tags","createTime","index","text","setText","authorUsername","referenceQuestion","chAnsware","setChAnsware","ind","getQuestionById","answares","getAnsware","onChangeTextArea","property","newValue","changeChAnsware","onAddAnsware","getLoggedUser","Date","now","format","addAnsware","console","log","toString","onOpenEditAnsware","proprety","onEditAnsware","editAnsware"],"mappings":"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","sourcesContent":["import ViewQuestion from '../presentational/ViewQuestion'\r\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter'\r\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport moment from 'moment'\r\n\r\n\r\nfunction SmartViewQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        tags: [],\r\n        createTime:\"\"\r\n    });\r\n    const { index } = useParams();\r\n\r\n    const [text, setText] = useState({\r\n        text: \"\",\r\n        authorUsername: \"\",\r\n        createTime: \"\",\r\n        referenceQuestion: null\r\n    });\r\n\r\n    const [chAnsware, setChAnsware] = useState({\r\n        ind:null\r\n    });\r\n\r\n    useEffect(() => {\r\n        setQuestion(QuestionPresenterInstance.getQuestionById(index))\r\n    }, []);\r\n\r\n    const answares = AnswarePresenterInstance.getAnsware(index);\r\n\r\n    const onChangeTextArea = (property, newValue) => {\r\n        setText({\r\n            ...text,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n    const changeChAnsware = (newValue) => {\r\n        setChAnsware({\r\n            ind: newValue\r\n        });\r\n    }\r\n\r\n    const onAddAnsware = () => {\r\n        setText({\r\n            ...text,\r\n            authorUsername: AppPresenterInstance.getLoggedUser(),\r\n            createTime: moment(Date.now()).format(\"YYYY-MM-DD HH:MM:SS\"),\r\n            referenceQuestion: index\r\n        });\r\n        AnswarePresenterInstance.addAnsware(text);\r\n        console.log(AnswarePresenterInstance.getAnsware().toString())\r\n    }\r\n\r\n    const onOpenEditAnsware = (proprety,newValue) => {\r\n        setText({\r\n            ...text,\r\n            [proprety]: newValue\r\n        });\r\n    }\r\n\r\n    const onEditAnsware = () => {\r\n        AnswarePresenterInstance.editAnsware(chAnsware.ind, text.text);\r\n    }\r\n\r\n    return (<ViewQuestion title={question.title}\r\n        body={question.body}\r\n        createTime={question.createTime}\r\n        tags={question.tags}\r\n        answares={answares}\r\n        text={text.text}\r\n        onChangeTextArea={onChangeTextArea}\r\n        onAddAnsware={onAddAnsware}\r\n        onOpenEditAnsware={onOpenEditAnsware}\r\n        onEditAnsware={onEditAnsware}\r\n        changeChAnsware={changeChAnsware}\r\n    />\r\n    );\r\n};\r\nexport default SmartViewQuestion\r\n"]},"metadata":{},"sourceType":"module"}