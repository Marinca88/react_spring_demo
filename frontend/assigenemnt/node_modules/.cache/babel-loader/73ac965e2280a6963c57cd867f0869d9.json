{"ast":null,"code":"import TagInstance from '../model/Tag';\nimport RestClient from '../rest/RestClient'; //const client = new RestClient(\"username1\", \"password\");\n\nclass TagPresenter {\n  addTag(text) {\n    return TagInstance.addTag(text);\n  }\n\n  async getTags(client) {\n    var tags = await client.loadAllTags();\n    console.log(tags);\n    return tags;\n  }\n\n  async saveTag(tag, client) {\n    var tags = await client.createTag(tag);\n    return tags;\n  }\n\n  getTagByText(text) {\n    return TagInstance.getTagByText(text);\n  }\n\n}\n\nconst TagPresenterInstance = new TagPresenter();\nexport default TagPresenterInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/presenter/TagPresenter.js"],"names":["TagInstance","RestClient","TagPresenter","addTag","text","getTags","client","tags","loadAllTags","console","log","saveTag","tag","createTag","getTagByText","TagPresenterInstance"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAEA;;AACA,MAAMC,YAAN,CAAmB;AACfC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAOJ,WAAW,CAACG,MAAZ,CAAmBC,IAAnB,CAAP;AACH;;AACY,QAAPC,OAAO,CAACC,MAAD,EAAS;AAClB,QAAIC,IAAI,GAAG,MAAMD,MAAM,CAACE,WAAP,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAOA,IAAP;AACH;;AAEY,QAAPI,OAAO,CAACC,GAAD,EAAKN,MAAL,EAAa;AACtB,QAAIC,IAAI,GAAG,MAAMD,MAAM,CAACO,SAAP,CAAiBD,GAAjB,CAAjB;AACA,WAAOL,IAAP;AACH;;AACDO,EAAAA,YAAY,CAACV,IAAD,EAAO;AACf,WAAOJ,WAAW,CAACc,YAAZ,CAAyBV,IAAzB,CAAP;AACH;;AAhBc;;AAmBnB,MAAMW,oBAAoB,GAAG,IAAIb,YAAJ,EAA7B;AACA,eAAea,oBAAf","sourcesContent":["import TagInstance from '../model/Tag';\r\nimport RestClient from '../rest/RestClient';\r\n\r\n//const client = new RestClient(\"username1\", \"password\");\r\nclass TagPresenter {\r\n    addTag(text) {\r\n        return TagInstance.addTag(text);\r\n    }\r\n    async getTags(client) {\r\n        var tags = await client.loadAllTags()\r\n        console.log(tags)\r\n        return tags;\r\n    }\r\n\r\n    async saveTag(tag,client) {\r\n        var tags = await client.createTag(tag)\r\n        return tags;\r\n    }\r\n    getTagByText(text) {\r\n        return TagInstance.getTagByText(text);\r\n    }\r\n\r\n}\r\nconst TagPresenterInstance = new TagPresenter();\r\nexport default TagPresenterInstance;"]},"metadata":{},"sourceType":"module"}