{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartHome.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport Home from '../presentational/Home';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartHome() {\n  _s();\n\n  const [text, setNewText] = useState({\n    text: \"\"\n  });\n  const [questions, setNewQuestions] = useState({\n    questions: QuestionPresenterInstance.getQuestion()\n  });\n  const [selectedQuestion, setSelectedQuestion] = useState({\n    title: \"\"\n  });\n\n  const onChange = (property, newValue) => {\n    setNewText({\n      [property]: newValue\n    });\n  };\n\n  const onSearch = () => {\n    setNewQuestions({\n      questions: QuestionPresenterInstance.getQuestionByText(text.text)\n    });\n  };\n\n  const onSelect = title => {\n    console.log(\"am ajuns aici\");\n    setSelectedQuestion({\n      title: title\n    });\n    const index = QuestionPresenterInstance.getQuestion.findIndex(element => element.title === selectedQuestion.title);\n    window.location.assign(\"/#/question-details/\" + index);\n  };\n\n  console.log(questions.questions[0].title);\n  return /*#__PURE__*/_jsxDEV(Home, {\n    text: text.text,\n    questions: questions.questions,\n    onSearch: onSearch,\n    onChange: onChange,\n    onSelect: onSelect\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SmartHome, \"NBldmsgTRTXwQfS0xcTrDxRfwmE=\");\n\n_c = SmartHome;\nexport default SmartHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartHome\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartHome.js"],"names":["QuestionPresenterInstance","Home","useState","SmartHome","text","setNewText","questions","setNewQuestions","getQuestion","selectedQuestion","setSelectedQuestion","title","onChange","property","newValue","onSearch","getQuestionByText","onSelect","console","log","index","findIndex","element","window","location","assign"],"mappings":";;;AAAA,OAAOA,yBAAP,MAAsC,gCAAtC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBH,QAAQ,CAAC;AAChCE,IAAAA,IAAI,EAAC;AAD2B,GAAD,CAAnC;AAGA,QAAM,CAACE,SAAD,EAAYC,eAAZ,IAA+BL,QAAQ,CAAC;AAC1CI,IAAAA,SAAS,EAAEN,yBAAyB,CAACQ,WAA1B;AAD+B,GAAD,CAA7C;AAGA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC;AACrDS,IAAAA,KAAK,EAAC;AAD+C,GAAD,CAAxD;;AAGA,QAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrCT,IAAAA,UAAU,CAAC;AACP,OAACQ,QAAD,GAAYC;AADL,KAAD,CAAV;AAGH,GAJD;;AAKA,QAAMC,QAAQ,GAAG,MAAM;AACnBR,IAAAA,eAAe,CAAC;AACZD,MAAAA,SAAS,EAAEN,yBAAyB,CAACgB,iBAA1B,CAA4CZ,IAAI,CAACA,IAAjD;AADC,KAAD,CAAf;AAIH,GALD;;AAOA,QAAMa,QAAQ,GAAIN,KAAD,IAAW;AACxBO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAT,IAAAA,mBAAmB,CAAC;AAChBC,MAAAA,KAAK,EAAEA;AADS,KAAD,CAAnB;AAGA,UAAMS,KAAK,GAAGpB,yBAAyB,CAACQ,WAA1B,CAAsCa,SAAtC,CAAgDC,OAAO,IAAIA,OAAO,CAACX,KAAR,KAAkBF,gBAAgB,CAACE,KAA9F,CAAd;AACAY,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,yBAAyBL,KAAhD;AACH,GAPD;;AAQAF,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAS,CAACA,SAAV,CAAoB,CAApB,EAAuBK,KAAnC;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEP,IAAI,CAACA,IAAjB;AACI,IAAA,SAAS,EAAEE,SAAS,CAACA,SADzB;AAEI,IAAA,QAAQ,EAAES,QAFd;AAGI,IAAA,QAAQ,EAAEH,QAHd;AAII,IAAA,QAAQ,EAAEK;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxCQd,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport Home from '../presentational/Home'\r\nimport { useState } from 'react';\r\n\r\nfunction SmartHome() {\r\n    const [text, setNewText] = useState({\r\n        text:\"\"\r\n    });\r\n    const [questions, setNewQuestions] = useState({\r\n        questions: QuestionPresenterInstance.getQuestion()\r\n    });\r\n    const [selectedQuestion, setSelectedQuestion] = useState({\r\n        title:\"\"\r\n    });\r\n    const onChange = (property, newValue) => {\r\n        setNewText({\r\n            [property]: newValue\r\n        });\r\n    }\r\n    const onSearch = () => {\r\n        setNewQuestions({\r\n            questions: QuestionPresenterInstance.getQuestionByText(text.text)\r\n        });\r\n\r\n    }\r\n\r\n    const onSelect = (title) => {\r\n        console.log(\"am ajuns aici\")\r\n        setSelectedQuestion({\r\n            title: title\r\n        });\r\n        const index = QuestionPresenterInstance.getQuestion.findIndex(element => element.title === selectedQuestion.title);\r\n        window.location.assign(\"/#/question-details/\" + index)\r\n    }\r\n    console.log(questions.questions[0].title);\r\n\r\n    return (\r\n        <Home text={text.text}\r\n            questions={questions.questions}\r\n            onSearch={onSearch}\r\n            onChange={onChange}\r\n            onSelect={onSelect}\r\n            />\r\n        );\r\n}\r\nexport default SmartHome;"]},"metadata":{},"sourceType":"module"}