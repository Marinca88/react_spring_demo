{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartCreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport TagPresenterInstance from '../presenter/TagPresenter';\nimport CreateQuestion from '../presentational/CreateQuestion';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartCreateQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    author: \"\",\n    createTime: \"\",\n    tags: [\"hello\"]\n  });\n  const [tagText, setTagText] = useState({\n    text: \"\"\n  });\n  const allTags = TagPresenterInstance.getTags();\n\n  const onChange = (property, newValue) => {\n    setQuestion({ ...question,\n      [property]: newValue\n    });\n  };\n\n  const onChangeTagText = newValue => {\n    setTagText({\n      text: newValue\n    });\n  };\n\n  const onSaveNewTag = () => {\n    TagPresenterInstance.addTag(tagText.text);\n    setQuestion({ ...question,\n      tags: [...question.tags, tagText.text]\n    });\n  };\n\n  const onAddTag = tag => {\n    setQuestion({ ...question,\n      tags: [...question.tags, tag]\n    });\n  };\n\n  const onRemoveTag = tag => {\n    var tgs = question.tags;\n    tgs.splice(tgs.indexOf(tag), 1);\n    setQuestion({ ...question,\n      tags: tgs\n    });\n  };\n\n  const onSave = () => {\n    var date = new Date();\n    setQuestion({ ...question,\n      createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\"),\n      author: AppPresenterInstance.getLoggedUser()\n    });\n    console.log(question.author);\n    QuestionPresenterInstance.addQuestion(question);\n    window.location.assign(\"#/home\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreateQuestion, {\n    title: question.title,\n    body: question.body,\n    tags: question.tags,\n    allTags: allTags,\n    onChange: onChange,\n    onRemoveTag: onRemoveTag,\n    onAddTag: onAddTag,\n    onSave: onSave,\n    onChangeTagText: onChangeTagText,\n    onSaveNewTag: onSaveNewTag,\n    nwTag: tagText.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SmartCreateQuestion, \"ppevbO+xdtEJg5RSV/osYTlmRSo=\");\n\n_c = SmartCreateQuestion;\nexport default SmartCreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartCreateQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartCreateQuestion.js"],"names":["QuestionPresenterInstance","AppPresenterInstance","TagPresenterInstance","CreateQuestion","useState","SmartCreateQuestion","question","setQuestion","title","body","author","createTime","tags","tagText","setTagText","text","allTags","getTags","onChange","property","newValue","onChangeTagText","onSaveNewTag","addTag","onAddTag","tag","onRemoveTag","tgs","splice","indexOf","onSave","date","Date","moment","format","getLoggedUser","console","log","addQuestion","window","location","assign"],"mappings":"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","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport TagPresenterInstance from '../presenter/TagPresenter'\r\nimport CreateQuestion from '../presentational/CreateQuestion'\r\nimport { useState } from 'react';\r\n\r\nfunction SmartCreateQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        author: \"\",\r\n        createTime: \"\",\r\n        tags: [\"hello\"]\r\n    });\r\n\r\n    const [tagText, setTagText] = useState({\r\n        text:\"\"\r\n    });\r\n\r\n    const allTags = TagPresenterInstance.getTags();\r\n\r\n\r\n    const onChange = (property, newValue) => {\r\n        setQuestion({\r\n            ...question,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n    const onChangeTagText = (newValue) => {\r\n        setTagText({\r\n            text: newValue\r\n        });\r\n    }\r\n\r\n    const onSaveNewTag = () => {\r\n        TagPresenterInstance.addTag(tagText.text);\r\n        setQuestion({\r\n            ...question,\r\n            tags: [...question.tags, tagText.text]\r\n        });\r\n    }\r\n\r\n    const onAddTag = (tag) => {\r\n        setQuestion({\r\n            ...question,\r\n            tags: [...question.tags, tag]\r\n        });\r\n    }\r\n\r\n    const onRemoveTag = (tag) => {\r\n        var tgs = question.tags;\r\n        tgs.splice(tgs.indexOf(tag), 1);\r\n        setQuestion({\r\n            ...question,\r\n            tags:tgs\r\n        });\r\n    }\r\n\r\n    const onSave = () => {\r\n        var date = new Date()\r\n        setQuestion({\r\n            ...question,\r\n            createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\"),\r\n            author: AppPresenterInstance.getLoggedUser()\r\n        });\r\n        console.log(question.author)\r\n        QuestionPresenterInstance.addQuestion(question);\r\n        window.location.assign(\"#/home\");\r\n    }\r\n\r\n    return (<CreateQuestion title={question.title} body={question.body} tags={question.tags} allTags={allTags} onChange={onChange} onRemoveTag={onRemoveTag} onAddTag={onAddTag} onSave={onSave} onChangeTagText={onChangeTagText} onSaveNewTag={onSaveNewTag} nwTag={tagText.text} />\r\n    );\r\n}\r\nexport default SmartCreateQuestion;"]},"metadata":{},"sourceType":"module"}