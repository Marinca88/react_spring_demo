{"ast":null,"code":"class Question {\n  constructor() {\n    this.state = {\n      questions: [{\n        title: \"Title1\",\n        body: \"Body1\",\n        createTime: \"2022-03-21 16:01:17\",\n        author: \"Username1\",\n        tags: [\"java\", \"tag\"],\n        upvotes: 1,\n        downvotes: 0\n      }, {\n        title: \"Title12\",\n        body: \"Body2\",\n        createTime: \"2022-03-21 16:01:17\",\n        author: \"Username2\",\n        tags: [\"java\"],\n        upvotes: 0,\n        downvotes: 1\n      }]\n    };\n  }\n\n  addTagToQuestion(index, tag) {\n    this.state.questions[index].tags = [...this.state.questions[index].tags, tag];\n  }\n\n  addQuestion(newQuestion) {\n    this.state.questions = [...this.state.questions, { ...newQuestion\n    }];\n  }\n\n  getQuestion() {\n    return this.state.questions;\n  }\n\n  getQuestionByText(text) {\n    return this.state.questions.filter(item => item.body.includes(text) || item.tags.includes(text) || item.title.includes(text));\n  }\n\n  getQuestionbyId(id) {\n    return this.state.questions[id];\n  }\n\n  upvote(index) {\n    this.state.questions[index].upvotes = this.state.questions[index].upvotes + 1;\n  }\n\n  downvote(index) {\n    this.state.questions[index].downvotes = this.state.questions[index].downvotes + 1;\n  }\n\n  getVotes(index) {\n    var votes = this.state.questions[index].upvotes - this.state.questions[index].downvotes;\n    return votes;\n  }\n\n}\n\nconst QuestionInstance = new Question();\nexport default QuestionInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/model/Question.js"],"names":["Question","constructor","state","questions","title","body","createTime","author","tags","upvotes","downvotes","addTagToQuestion","index","tag","addQuestion","newQuestion","getQuestion","getQuestionByText","text","filter","item","includes","getQuestionbyId","id","upvote","downvote","getVotes","votes","QuestionInstance"],"mappings":"AAAA,MAAMA,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CAAC;AACRC,QAAAA,KAAK,EAAE,QADC;AAERC,QAAAA,IAAI,EAAE,OAFE;AAGRC,QAAAA,UAAU,EAAE,qBAHJ;AAIRC,QAAAA,MAAM,EAAE,WAJA;AAKRC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,KAAT,CALE;AAMRC,QAAAA,OAAO,EAAE,CAND;AAORC,QAAAA,SAAS,EAAE;AAPH,OAAD,EASX;AACIN,QAAAA,KAAK,EAAE,SADX;AAEIC,QAAAA,IAAI,EAAE,OAFV;AAGIC,QAAAA,UAAU,EAAE,qBAHhB;AAIIC,QAAAA,MAAM,EAAE,WAJZ;AAKIC,QAAAA,IAAI,EAAE,CAAC,MAAD,CALV;AAMIC,QAAAA,OAAO,EAAE,CANb;AAOIC,QAAAA,SAAS,EAAE;AAPf,OATW;AADF,KAAb;AAqBH;;AAEDC,EAAAA,gBAAgB,CAACC,KAAD,EAAOC,GAAP,EAAY;AACxB,SAAKX,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BJ,IAA5B,GAAmC,CAC/B,GAAG,KAAKN,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BJ,IADA,EAE/BK,GAF+B,CAAnC;AAIH;;AAEDC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKb,KAAL,CAAWC,SAAX,GAAuB,CACnB,GAAG,KAAKD,KAAL,CAAWC,SADK,EAEnB,EACI,GAAGY;AADP,KAFmB,CAAvB;AAMH;;AAEDC,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKd,KAAL,CAAWC,SAAlB;AACH;;AAEDc,EAAAA,iBAAiB,CAACC,IAAD,EAAO;AACpB,WAAO,KAAKhB,KAAL,CAAWC,SAAX,CAAqBgB,MAArB,CAA4BC,IAAI,IAAIA,IAAI,CAACf,IAAL,CAAUgB,QAAV,CAAmBH,IAAnB,KAA4BE,IAAI,CAACZ,IAAL,CAAUa,QAAV,CAAmBH,IAAnB,CAA5B,IAAwDE,IAAI,CAAChB,KAAL,CAAWiB,QAAX,CAAoBH,IAApB,CAA5F,CAAP;AACH;;AAEDI,EAAAA,eAAe,CAACC,EAAD,EAAK;AAChB,WAAO,KAAKrB,KAAL,CAAWC,SAAX,CAAqBoB,EAArB,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACZ,KAAD,EAAQ;AACV,SAAKV,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BH,OAA5B,GAAsC,KAAKP,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BH,OAA5B,GAAoC,CAA1E;AACH;;AAEDgB,EAAAA,QAAQ,CAACb,KAAD,EAAQ;AACZ,SAAKV,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BF,SAA5B,GAAwC,KAAKR,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BF,SAA5B,GAAwC,CAAhF;AACH;;AAEDgB,EAAAA,QAAQ,CAACd,KAAD,EAAQ;AACZ,QAAIe,KAAK,GAAG,KAAKzB,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BH,OAA5B,GAAsC,KAAKP,KAAL,CAAWC,SAAX,CAAqBS,KAArB,EAA4BF,SAA9E;AACA,WAAOiB,KAAP;AACH;;AAhEU;;AAkEf,MAAMC,gBAAgB,GAAG,IAAI5B,QAAJ,EAAzB;AACA,eAAe4B,gBAAf","sourcesContent":["class Question {\r\n    constructor() {\r\n        this.state = {\r\n            questions: [{\r\n                title: \"Title1\",\r\n                body: \"Body1\",\r\n                createTime: \"2022-03-21 16:01:17\",\r\n                author: \"Username1\",\r\n                tags: [\"java\", \"tag\"],\r\n                upvotes: 1,\r\n                downvotes: 0\r\n            },\r\n            {\r\n                title: \"Title12\",\r\n                body: \"Body2\",\r\n                createTime: \"2022-03-21 16:01:17\",\r\n                author: \"Username2\",\r\n                tags: [\"java\"],\r\n                upvotes: 0,\r\n                downvotes: 1\r\n            }\r\n            ]\r\n        };\r\n    }\r\n\r\n    addTagToQuestion(index,tag) {\r\n        this.state.questions[index].tags = [\r\n            ...this.state.questions[index].tags,\r\n            tag\r\n        ];\r\n    }\r\n\r\n    addQuestion(newQuestion) {\r\n        this.state.questions = [\r\n            ...this.state.questions,\r\n            {\r\n                ...newQuestion\r\n            }\r\n        ];\r\n    }\r\n\r\n    getQuestion() {\r\n        return this.state.questions;\r\n    }\r\n\r\n    getQuestionByText(text) {\r\n        return this.state.questions.filter(item => item.body.includes(text) || item.tags.includes(text) || item.title.includes(text));\r\n    }\r\n\r\n    getQuestionbyId(id) {\r\n        return this.state.questions[id];\r\n    }\r\n\r\n    upvote(index) {\r\n        this.state.questions[index].upvotes = this.state.questions[index].upvotes+1\r\n    }\r\n\r\n    downvote(index) {\r\n        this.state.questions[index].downvotes = this.state.questions[index].downvotes + 1\r\n    }\r\n\r\n    getVotes(index) {\r\n        var votes = this.state.questions[index].upvotes - this.state.questions[index].downvotes\r\n        return votes\r\n    }\r\n}\r\nconst QuestionInstance = new Question();\r\nexport default QuestionInstance;"]},"metadata":{},"sourceType":"module"}