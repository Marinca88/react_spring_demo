{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport { Client } from \"@stomp/stompjs\";\n\nclass WebSocketListener extends EventEmitter {\n  constructor(username, password) {\n    super();\n    this.client = new Client({\n      \"brokerURL\": \"ws://localhost:8080/api/websocket\",\n      \"connectHeaders\": {\n        \"login\": username,\n        \"passcode\": password\n      },\n      \"onConnect\": () => {\n        this.client.subscribe(\"/topic/events\", message => {\n          const receivedMessage = JSON.parse(message.body);\n          this.emit(receivedMessage.eventType, receivedMessage);\n        });\n      }\n    });\n    this.client.activate();\n  }\n\n}\n\nconst WebSocketListenerInstance = new WebSocketListener(`username1`, `password`);\nexport default WebSocketListenerInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/ws/WebSocketListener.js"],"names":["EventEmitter","Client","WebSocketListener","constructor","username","password","client","subscribe","message","receivedMessage","JSON","parse","body","emit","eventType","activate","WebSocketListenerInstance"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AACA,MAAMC,iBAAN,SAAgCF,YAAhC,CAA6C;AACzCG,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC5B;AACA,SAAKC,MAAL,GAAc,IAAIL,MAAJ,CAAW;AACrB,mBAAa,mCADQ;AAErB,wBAAkB;AACd,iBAASG,QADK;AAEd,oBAAYC;AAFE,OAFG;AAMrB,mBAAa,MAAM;AACf,aAAKC,MAAL,CAAYC,SAAZ,CAAsB,eAAtB,EAAuCC,OAAO,IAAI;AAC9C,gBAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAxB;AACA,eAAKC,IAAL,CAAUJ,eAAe,CAACK,SAA1B,EAAqCL,eAArC;AACH,SAHD;AAIH;AAXoB,KAAX,CAAd;AAaA,SAAKH,MAAL,CAAYS,QAAZ;AACH;;AAjBwC;;AAmB7C,MAAMC,yBAAyB,GAAG,IAAId,iBAAJ,CAAuB,WAAvB,EAAoC,UAApC,CAAlC;AACA,eAAec,yBAAf","sourcesContent":["import { EventEmitter } from \"events\"\r\nimport { Client } from \"@stomp/stompjs\"\r\nclass WebSocketListener extends EventEmitter {\r\n    constructor(username, password) {\r\n        super();\r\n        this.client = new Client({\r\n            \"brokerURL\": \"ws://localhost:8080/api/websocket\",\r\n            \"connectHeaders\": {\r\n                \"login\": username,\r\n                \"passcode\": password\r\n            },\r\n            \"onConnect\": () => {\r\n                this.client.subscribe(\"/topic/events\", message => {\r\n                    const receivedMessage = JSON.parse(message.body);\r\n                    this.emit(receivedMessage.eventType, receivedMessage)\r\n                })\r\n            }\r\n        });\r\n        this.client.activate();\r\n    }\r\n}\r\nconst WebSocketListenerInstance = new WebSocketListener(`username1`, `password` )\r\nexport default WebSocketListenerInstance;"]},"metadata":{},"sourceType":"module"}