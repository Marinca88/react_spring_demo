{"ast":null,"code":"import AnswareInstance from '../model/Answare';\nimport RestClient from '../rest/RestClient';\nconst client = new RestClient(\"username1\", \"password\");\n\nclass AnswarePresenter {\n  async addAnsware(newAnsware) {\n    var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  removeAnsware(index) {\n    return AnswareInstance.removeAnsware(index);\n  }\n\n  async editAnsware(answare, text) {\n    console.log(answare);\n    console.log(text);\n    var answares = await client.loadAllAnswares();\n    var ind = answares.indexOf(answares.find(element => element.text === text && answare.authorUsername == element.author && element.question_id == answare.referenceQuestion + 1));\n    var el = await client.editAnsware(ind, answare.text);\n\n    if (el.message == \"Updated\") {\n      var returnedAnswares = await client.loadAnswaresForQuestion(answare.referenceQuestion);\n      console.log(returnedAnswares);\n      AnswareInstance.addAnswares(returnedAnswares);\n      return returnedAnswares;\n    } else {\n      return AnswareInstance.getAnswares();\n    }\n  }\n\n  async getAnswaresForQuestion(index) {\n    var answares = await client.loadAnswaresForQuestion(index);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  getAnswares() {\n    return AnswareInstance.getAnswares();\n  }\n\n  upvote(index) {\n    return AnswareInstance.upvote(index);\n  }\n\n  downvote(index) {\n    return AnswareInstance.downvote(index);\n  }\n\n  getVotes(index) {\n    return AnswareInstance.getVotes(index);\n  }\n\n}\n\nconst AnswarePresenterInstance = new AnswarePresenter();\nexport default AnswarePresenterInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/presenter/AnswarePresenter.js"],"names":["AnswareInstance","RestClient","client","AnswarePresenter","addAnsware","newAnsware","answares","loadRefreshedAnswares","upvotes","downvotes","text","referenceQuestion","addAnswares","getAnswares","removeAnsware","index","editAnsware","answare","console","log","loadAllAnswares","ind","indexOf","find","element","authorUsername","author","question_id","el","message","returnedAnswares","loadAnswaresForQuestion","getAnswaresForQuestion","upvote","downvote","getVotes","AnswarePresenterInstance"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,MAAM,GAAG,IAAID,UAAJ,CAAe,WAAf,EAA4B,UAA5B,CAAf;;AACA,MAAME,gBAAN,CAAuB;AACH,QAAVC,UAAU,CAACC,UAAD,EAAa;AACzB,QAAIC,QAAQ,GAAG,MAAMJ,MAAM,CAACK,qBAAP,CAA6BF,UAAU,CAACG,OAAxC,EAAiDH,UAAU,CAACI,SAA5D,EAAuEJ,UAAU,CAACK,IAAlF,EAAwFL,UAAU,CAACM,iBAAnG,CAArB;AACAX,IAAAA,eAAe,CAACY,WAAhB,CAA4BN,QAA5B;AACA,WAAON,eAAe,CAACa,WAAhB,EAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,WAAOf,eAAe,CAACc,aAAhB,CAA8BC,KAA9B,CAAP;AACH;;AAEgB,QAAXC,WAAW,CAACC,OAAD,EAASP,IAAT,EAAe;AAC5BQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,QAAIJ,QAAQ,GAAG,MAAMJ,MAAM,CAACkB,eAAP,EAArB;AACA,QAAIC,GAAG,GAAGf,QAAQ,CAACgB,OAAT,CAAiBhB,QAAQ,CAACiB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACd,IAAR,KAAiBA,IAAjB,IAAyBO,OAAO,CAACQ,cAAR,IAA0BD,OAAO,CAACE,MAA3D,IAAqEF,OAAO,CAACG,WAAR,IAAwBV,OAAO,CAACN,iBAAR,GAA0B,CAAhJ,CAAjB,CAAV;AACA,QAAIiB,EAAE,GAAG,MAAM1B,MAAM,CAACc,WAAP,CAAmBK,GAAnB,EAAwBJ,OAAO,CAACP,IAAhC,CAAf;;AACA,QAAIkB,EAAE,CAACC,OAAH,IAAc,SAAlB,EAA6B;AACzB,UAAIC,gBAAgB,GAAG,MAAM5B,MAAM,CAAC6B,uBAAP,CAA+Bd,OAAO,CAACN,iBAAvC,CAA7B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYW,gBAAZ;AACA9B,MAAAA,eAAe,CAACY,WAAhB,CAA4BkB,gBAA5B;AACA,aAAOA,gBAAP;AACH,KALD,MAKO;AACH,aAAO9B,eAAe,CAACa,WAAhB,EAAP;AACH;AACJ;;AAC2B,QAAtBmB,sBAAsB,CAACjB,KAAD,EAAQ;AAChC,QAAIT,QAAQ,GAAG,MAAMJ,MAAM,CAAC6B,uBAAP,CAA+BhB,KAA/B,CAArB;AACAf,IAAAA,eAAe,CAACY,WAAhB,CAA4BN,QAA5B;AACA,WAAON,eAAe,CAACa,WAAhB,EAAP;AACH;;AACDA,EAAAA,WAAW,GAAG;AACV,WAAOb,eAAe,CAACa,WAAhB,EAAP;AACH;;AAEDoB,EAAAA,MAAM,CAAClB,KAAD,EAAQ;AACV,WAAOf,eAAe,CAACiC,MAAhB,CAAuBlB,KAAvB,CAAP;AACH;;AAEDmB,EAAAA,QAAQ,CAACnB,KAAD,EAAQ;AACZ,WAAOf,eAAe,CAACkC,QAAhB,CAAyBnB,KAAzB,CAAP;AACH;;AAEDoB,EAAAA,QAAQ,CAACpB,KAAD,EAAQ;AACZ,WAAOf,eAAe,CAACmC,QAAhB,CAAyBpB,KAAzB,CAAP;AACH;;AA7CkB;;AA+CvB,MAAMqB,wBAAwB,GAAG,IAAIjC,gBAAJ,EAAjC;AACA,eAAeiC,wBAAf","sourcesContent":["import AnswareInstance from '../model/Answare'\r\nimport RestClient from '../rest/RestClient';\r\n\r\nconst client = new RestClient(\"username1\", \"password\");\r\nclass AnswarePresenter {\r\n    async addAnsware(newAnsware) {\r\n        var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion)\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    removeAnsware(index) {\r\n        return AnswareInstance.removeAnsware(index);\r\n    }\r\n\r\n    async editAnsware(answare,text) {\r\n        console.log(answare)\r\n        console.log(text)\r\n        var answares = await client.loadAllAnswares()\r\n        var ind = answares.indexOf(answares.find(element => element.text === text && answare.authorUsername == element.author && element.question_id == (answare.referenceQuestion+1)));\r\n        var el = await client.editAnsware(ind, answare.text);\r\n        if (el.message == \"Updated\") {\r\n            var returnedAnswares = await client.loadAnswaresForQuestion(answare.referenceQuestion);\r\n            console.log(returnedAnswares)\r\n            AnswareInstance.addAnswares(returnedAnswares)\r\n            return returnedAnswares;\r\n        } else {\r\n            return AnswareInstance.getAnswares()\r\n        }\r\n    }\r\n    async getAnswaresForQuestion(index) {\r\n        var answares = await client.loadAnswaresForQuestion(index);\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n    getAnswares() {\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    upvote(index) {\r\n        return AnswareInstance.upvote(index);\r\n    }\r\n\r\n    downvote(index) {\r\n        return AnswareInstance.downvote(index);\r\n    }\r\n\r\n    getVotes(index) {\r\n        return AnswareInstance.getVotes(index);\r\n    }\r\n}\r\nconst AnswarePresenterInstance = new AnswarePresenter();\r\nexport default AnswarePresenterInstance;"]},"metadata":{},"sourceType":"module"}