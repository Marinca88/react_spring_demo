{"ast":null,"code":"const BASE_URL = \"http://localhost:8080\";\n\nclass RestClient {\n  constructor(username, password) {\n    this.loadAllStudents = () => {\n      return fetch(`${BASE_URL}/stackoverflow`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": this.authorization,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      });\n    };\n\n    this.loadSerachedQuestions = text => {\n      return fetch(`${BASE_URL}/stackoverflow/search?text=${text}`, {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": this.authorization,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      });\n    };\n\n    this.loadUpdatedQuestion = (title, body, createTime, author, upvotes, downvotes, tags) => {\n      console.log(author);\n      return fetch(`${BASE_URL}/stackoverflow/upvoteQuestion`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          title: title,\n          body: body,\n          author: author,\n          createTime: createTime,\n          tags: tags,\n          upvotes: upvotes,\n          downvotes: downvotes\n        }),\n        headers: {\n          \"Authorization\": this.authorization,\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      });\n    };\n\n    this.authorization = \"Basic \" + btoa(username + \":\" + password);\n  }\n\n}\n\nexport default RestClient;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/rest/RestClient.js"],"names":["BASE_URL","RestClient","constructor","username","password","loadAllStudents","fetch","method","headers","authorization","then","response","json","loadSerachedQuestions","text","loadUpdatedQuestion","title","body","createTime","author","upvotes","downvotes","tags","console","log","JSON","stringify","btoa"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB;;AACA,MAAMC,UAAN,CAAiB;AAChBC,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAA,SAIhCC,eAJgC,GAId,MAAM;AACvB,aAAOC,KAAK,CAAE,GAAEN,QAAS,gBAAb,EAA8B;AACzCO,QAAAA,MAAM,EAAE,KADiC;AAEzCC,QAAAA,OAAO,EAAE;AACR,2BAAiB,KAAKC,aADd;AAER,0BAAgB;AAFR;AAFgC,OAA9B,CAAL,CAMJC,IANI,CAMEC,QAAD,IAAc;AACrB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,OARM,CAAP;AAUA,KAf+B;;AAAA,SAiBhCC,qBAjBgC,GAiBPC,IAAD,IAAU;AACjC,aAAOR,KAAK,CAAE,GAAEN,QAAS,8BAA6Bc,IAAK,EAA/C,EAAkD;AAC7DP,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,OAAO,EAAE;AACR,2BAAiB,KAAKC,aADd;AAER,0BAAgB;AAFR;AAFoD,OAAlD,CAAL,CAMJC,IANI,CAMEC,QAAD,IAAc;AACrB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,OARM,CAAP;AAUA,KA5B+B;;AAAA,SA8BhCG,mBA9BgC,GA8BV,CAACC,KAAD,EAAQC,IAAR,EAAcC,UAAd,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,SAA3C,EAAsDC,IAAtD,KAA+D;AACpFC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,aAAOb,KAAK,CAAE,GAAEN,QAAS,+BAAb,EAA6C;AACxDO,QAAAA,MAAM,EAAE,KADgD;AAExDU,QAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAe;AACpBV,UAAAA,KAAK,EAAEA,KADa;AAEpBC,UAAAA,IAAI,EAAEA,IAFc;AAGpBE,UAAAA,MAAM,EAAEA,MAHY;AAIpBD,UAAAA,UAAU,EAAEA,UAJQ;AAKpBI,UAAAA,IAAI,EAAEA,IALc;AAMpBF,UAAAA,OAAO,EAAEA,OANW;AAOpBC,UAAAA,SAAS,EAACA;AAPU,SAAf,CAFkD;AAWxDb,QAAAA,OAAO,EAAE;AACR,2BAAiB,KAAKC,aADd;AAER,0BAAgB;AAFR;AAX+C,OAA7C,CAAL,CAeJC,IAfI,CAeEC,QAAD,IAAc;AACrB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,OAjBM,CAAP;AAmBA,KAnD+B;;AAC/B,SAAKH,aAAL,GAAqB,WAAWkB,IAAI,CAACxB,QAAQ,GAAG,GAAX,GAAiBC,QAAlB,CAApC;AACA;;AAHe;;AAsDjB,eAAeH,UAAf","sourcesContent":["const BASE_URL = \"http://localhost:8080\";\r\nclass RestClient {\r\n\tconstructor(username, password) {\r\n\t\tthis.authorization = \"Basic \" + btoa(username + \":\" + password);\r\n\t}\r\n\r\n\tloadAllStudents = () => {\r\n\t\treturn fetch(`${BASE_URL}/stackoverflow`, {\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": this.authorization,\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t}).then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tloadSerachedQuestions = (text) => {\r\n\t\treturn fetch(`${BASE_URL}/stackoverflow/search?text=${text}`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": this.authorization,\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t}).then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tloadUpdatedQuestion = (title, body, createTime, author, upvotes, downvotes, tags) => {\r\n\t\tconsole.log(author);\r\n\t\treturn fetch(`${BASE_URL}/stackoverflow/upvoteQuestion`, {\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tbody: body,\r\n\t\t\t\tauthor: author,\r\n\t\t\t\tcreateTime: createTime,\r\n\t\t\t\ttags: tags,\r\n\t\t\t\tupvotes: upvotes,\r\n\t\t\t\tdownvotes:downvotes\r\n            }),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": this.authorization,\r\n\t\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t\t},\r\n\t\t}).then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n}\r\nexport default RestClient;"]},"metadata":{},"sourceType":"module"}