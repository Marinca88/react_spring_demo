{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport { Client } from \"@stomp/stompjs\";\n\nclass WebSocketListener extends EventEmitter {\n  constructor(username, password) {\n    super();\n    this.client = new Client({\n      brokerURL: \"ws://\" + username + \":\" + password + \"@localhost:8080/api/websocket\",\n\n      /*connectHeaders: {\r\n          login: username,\r\n          passcode: password\r\n      },*/\n      onConnect: () => {\n        this.client.subscribe(\"/topic/events\", message => {\n          const receivedMessage = JSON.parse(message.body);\n          this.emit(receivedMessage.type, receivedMessage);\n        });\n      }\n    });\n    this.client.activate();\n  }\n\n}\n\nconst WebSocketListenerInstance = new WebSocketListener(\"username1\", \"password\");\nexport default WebSocketListenerInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/ws/WebSocketListener.js"],"names":["EventEmitter","Client","WebSocketListener","constructor","username","password","client","brokerURL","onConnect","subscribe","message","receivedMessage","JSON","parse","body","emit","type","activate","WebSocketListenerInstance"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,MAAMC,iBAAN,SAAgCF,YAAhC,CAA6C;AACzCG,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC5B;AACA,SAAKC,MAAL,GAAc,IAAIL,MAAJ,CAAW;AACrBM,MAAAA,SAAS,EAAE,UAAUH,QAAV,GAAqB,GAArB,GAA2BC,QAA3B,GAAsC,+BAD5B;;AAErB;AACZ;AACA;AACA;AACYG,MAAAA,SAAS,EAAE,MAAM;AACb,aAAKF,MAAL,CAAYG,SAAZ,CAAsB,eAAtB,EAAuCC,OAAO,IAAI;AAC9C,gBAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAxB;AACA,eAAKC,IAAL,CAAUJ,eAAe,CAACK,IAA1B,EAAgCL,eAAhC;AACH,SAHD;AAIH;AAXoB,KAAX,CAAd;AAaA,SAAKL,MAAL,CAAYW,QAAZ;AACH;;AAjBwC;;AAoB7C,MAAMC,yBAAyB,GAAG,IAAIhB,iBAAJ,CAAsB,WAAtB,EAAkC,UAAlC,CAAlC;AACA,eAAegB,yBAAf","sourcesContent":["import { EventEmitter } from \"events\"\r\nimport { Client } from \"@stomp/stompjs\"\r\n\r\nclass WebSocketListener extends EventEmitter {\r\n    constructor(username, password) {\r\n        super();\r\n        this.client = new Client({\r\n            brokerURL: \"ws://\" + username + \":\" + password + \"@localhost:8080/api/websocket\",\r\n            /*connectHeaders: {\r\n                login: username,\r\n                passcode: password\r\n            },*/\r\n            onConnect: () => {\r\n                this.client.subscribe(\"/topic/events\", message => {\r\n                    const receivedMessage = JSON.parse(message.body);\r\n                    this.emit(receivedMessage.type, receivedMessage)\r\n                })\r\n            }\r\n        });\r\n        this.client.activate();\r\n    }\r\n\r\n}\r\nconst WebSocketListenerInstance = new WebSocketListener(\"username1\",\"password\");\r\nexport default WebSocketListenerInstance;"]},"metadata":{},"sourceType":"module"}