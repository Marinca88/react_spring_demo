{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmrtViewQuestion.js\",\n    _s = $RefreshSig$();\n\nimport ViewQuestion from '../presentational/ViewQuestion';\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter';\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport VotesPresenterInstance from '../presenter/VotesPresenter';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartViewQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    tags: [],\n    createTime: \"\",\n    upvotes: 0,\n    downvotes: 0\n  });\n  const {\n    index\n  } = useParams();\n  const [text, setText] = useState({\n    text: \"\",\n    authorUsername: \"Username1\",\n    createTime: \"\",\n    referenceQuestion: index,\n    upvotes: 0,\n    downvotes: 0\n  });\n  const [chAnsware, setChAnsware] = useState({\n    text: \"\"\n  });\n\n  const onChAnsware = newValue => {\n    setChAnsware({\n      text: newValue\n    });\n  };\n\n  const [answares, setAnswares] = useState({\n    answares: []\n  });\n  useEffect(() => {\n    QuestionPresenterInstance.getQuestionById(index).then(foundQuestion => {\n      setQuestion({ ...foundQuestion\n      });\n    });\n    AnswarePresenterInstance.getAnswaresForQuestion(index).then(foundAnswares => {\n      setAnswares({\n        answares: [...foundAnswares]\n      });\n    });\n  }, []);\n\n  const onChangeTextArea = (property, newValue) => {\n    setText({ ...text,\n      [property]: newValue\n    });\n  };\n\n  const onAddAnsware = () => {\n    var date = new Date();\n    setText({ ...text,\n      createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\")\n    });\n    AnswarePresenterInstance.addAnsware(text).then(foundAnswares => {\n      setAnswares({\n        answares: [...foundAnswares]\n      });\n    });\n  };\n\n  const onOpenEditAnsware = (proprety, newValue) => {\n    setText({ ...text,\n      [proprety]: newValue\n    });\n  };\n\n  const onEditAnsware = () => {\n    var answaresi = AnswarePresenterInstance.getAnswares();\n    var ind = answaresi.indexOf(answaresi.find(element => element.text === chAnsware.text));\n    console.log(ind);\n    AnswarePresenterInstance.editAnsware(ind, text.text);\n    setAnswares({\n      answares: AnswarePresenterInstance.getAnsware(index)\n    });\n  };\n\n  const onVote = (ud, type, text) => {\n    if (type === \"question\") {\n      var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\");\n      var vote = userVotes.find(item => item.id === index && item.type === \"question\");\n\n      if (vote === undefined) {\n        if (ud === \"up\") {\n          console.log(\"am ajuns aici pt up question \");\n          QuestionPresenterInstance.upvote(index);\n          VotesPresenterInstance.addVote({\n            user: \"Username1\",\n            type: \"question\",\n            id: index\n          });\n          setQuestion(QuestionPresenterInstance.getQuestionById(index));\n        } else {\n          if (ud === \"down\") {\n            console.log(\"am ajuns aici pt down question\");\n            QuestionPresenterInstance.downvote(index);\n            VotesPresenterInstance.addVote({\n              user: \"Username1\",\n              type: \"question\",\n              id: index\n            });\n            setQuestion(QuestionPresenterInstance.getQuestionById(index));\n          }\n        }\n      }\n    } else {\n      var answaresi = AnswarePresenterInstance.getAnswares();\n      var ind = answaresi.indexOf(answaresi.find(element => element.text === text));\n      var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\");\n      var vote = userVotes.find(item => item.id === ind && item.type === \"answare\");\n\n      if (vote === undefined) {\n        if (ud === \"up\") {\n          console.log(\"am ajuns aici pt up answare\");\n          AnswarePresenterInstance.upvote(ind);\n          VotesPresenterInstance.addVote({\n            user: \"Username1\",\n            type: \"answare\",\n            id: ind\n          });\n          setAnswares({\n            answares: AnswarePresenterInstance.getAnsware(index)\n          });\n        } else {\n          if (ud === \"down\") {\n            console.log(\"am ajuns aici pt down answare\");\n            AnswarePresenterInstance.downvote(ind);\n            VotesPresenterInstance.addVote({\n              user: \"Username1\",\n              type: \"answare\",\n              id: ind\n            });\n            setAnswares({\n              answares: AnswarePresenterInstance.getAnsware(index)\n            });\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ViewQuestion, {\n    title: question.title,\n    body: question.body,\n    createTime: question.createTime,\n    tags: question.tags,\n    answares: answares.answares,\n    text: text.text,\n    onChangeTextArea: onChangeTextArea,\n    onAddAnsware: onAddAnsware,\n    onOpenEditAnsware: onOpenEditAnsware,\n    onEditAnsware: onEditAnsware,\n    onChAnsware: onChAnsware,\n    onVote: onVote,\n    upvotes: question.upvotes,\n    downvotes: question.downvotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SmartViewQuestion, \"ASe6Zp4LojY0dXkbmWEeIriQOBQ=\", false, function () {\n  return [useParams];\n});\n\n_c = SmartViewQuestion;\n;\nexport default SmartViewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartViewQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmrtViewQuestion.js"],"names":["ViewQuestion","AnswarePresenterInstance","QuestionPresenterInstance","AppPresenterInstance","VotesPresenterInstance","useEffect","useState","useParams","moment","SmartViewQuestion","question","setQuestion","title","body","tags","createTime","upvotes","downvotes","index","text","setText","authorUsername","referenceQuestion","chAnsware","setChAnsware","onChAnsware","newValue","answares","setAnswares","getQuestionById","then","foundQuestion","getAnswaresForQuestion","foundAnswares","onChangeTextArea","property","onAddAnsware","date","Date","format","addAnsware","onOpenEditAnsware","proprety","onEditAnsware","answaresi","getAnswares","ind","indexOf","find","element","console","log","editAnsware","getAnsware","onVote","ud","type","userVotes","getVotesBy","vote","item","id","undefined","upvote","addVote","user","downvote"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gCAAzB;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,yBAAP,MAAsC,gCAAtC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,sBAAP,MAAmC,6BAAnC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACrCM,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,IAAI,EAAE,EAH+B;AAIrCC,IAAAA,UAAU,EAAE,EAJyB;AAKrCC,IAAAA,OAAO,EAAE,CAL4B;AAMrCC,IAAAA,SAAS,EAAE;AAN0B,GAAD,CAAxC;AAQA,QAAM;AAAEC,IAAAA;AAAF,MAAYX,SAAS,EAA3B;AAEA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC;AAC7Ba,IAAAA,IAAI,EAAE,EADuB;AAE7BE,IAAAA,cAAc,EAAE,WAFa;AAG7BN,IAAAA,UAAU,EAAE,EAHiB;AAI7BO,IAAAA,iBAAiB,EAAEJ,KAJU;AAK7BF,IAAAA,OAAO,EAAE,CALoB;AAM7BC,IAAAA,SAAS,EAAC;AANmB,GAAD,CAAhC;AASA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC;AACvCa,IAAAA,IAAI,EAAE;AADiC,GAAD,CAA1C;;AAIA,QAAMM,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,YAAY,CAAC;AACTL,MAAAA,IAAI,EAACO;AADI,KAAD,CAAZ;AAGH,GAJD;;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC;AACrCqB,IAAAA,QAAQ,EAAE;AAD2B,GAAD,CAAxC;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACZH,IAAAA,yBAAyB,CAAC2B,eAA1B,CAA0CX,KAA1C,EAAiDY,IAAjD,CAAsDC,aAAa,IAAI;AACnEpB,MAAAA,WAAW,CAAC,EACR,GAAGoB;AADK,OAAD,CAAX;AAIH,KALD;AAMA9B,IAAAA,wBAAwB,CAAC+B,sBAAzB,CAAgDd,KAAhD,EAAuDY,IAAvD,CAA4DG,aAAa,IAAI;AACzEL,MAAAA,WAAW,CAAC;AACRD,QAAAA,QAAQ,EAAC,CAAC,GAAGM,aAAJ;AADD,OAAD,CAAX;AAIH,KALD;AAMH,GAbQ,EAaN,EAbM,CAAT;;AAgBA,QAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWT,QAAX,KAAwB;AAC7CN,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACgB,QAAD,GAAYT;AAFR,KAAD,CAAP;AAIH,GALD;;AASA,QAAMU,YAAY,GAAG,MAAM;AACvB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAlB,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJJ,MAAAA,UAAU,EAAEP,MAAM,CAAC6B,IAAD,CAAN,CAAaE,MAAb,CAAoB,qBAApB;AAFR,KAAD,CAAP;AAIAtC,IAAAA,wBAAwB,CAACuC,UAAzB,CAAoCrB,IAApC,EAA0CW,IAA1C,CAA+CG,aAAa,IAAI;AAC5DL,MAAAA,WAAW,CAAC;AACRD,QAAAA,QAAQ,EAAE,CAAC,GAAGM,aAAJ;AADF,OAAD,CAAX;AAIH,KALD;AAOH,GAbD;;AAeA,QAAMQ,iBAAiB,GAAG,CAACC,QAAD,EAAUhB,QAAV,KAAuB;AAC7CN,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACuB,QAAD,GAAYhB;AAFR,KAAD,CAAP;AAIH,GALD;;AAOA,QAAMiB,aAAa,GAAG,MAAM;AACxB,QAAIC,SAAS,GAAG3C,wBAAwB,CAAC4C,WAAzB,EAAhB;AACA,QAAIC,GAAG,GAAGF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACI,IAAV,CAAeC,OAAO,IAAIA,OAAO,CAAC9B,IAAR,KAAiBI,SAAS,CAACJ,IAArD,CAAlB,CAAV;AACA+B,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA7C,IAAAA,wBAAwB,CAACmD,WAAzB,CAAqCN,GAArC,EAA0C3B,IAAI,CAACA,IAA/C;AACAS,IAAAA,WAAW,CAAC;AACRD,MAAAA,QAAQ,EAAE1B,wBAAwB,CAACoD,UAAzB,CAAoCnC,KAApC;AADF,KAAD,CAAX;AAGH,GARD;;AAUA,QAAMoC,MAAM,GAAG,CAACC,EAAD,EAAKC,IAAL,EAAWrC,IAAX,KAAoB;AAC/B,QAAIqC,IAAI,KAAK,UAAb,EAAyB;AACrB,UAAIC,SAAS,GAAGrD,sBAAsB,CAACsD,UAAvB,CAAkC,WAAlC,CAAhB;AACA,UAAIC,IAAI,GAAGF,SAAS,CAACT,IAAV,CAAeY,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAY3C,KAAZ,IAAqB0C,IAAI,CAACJ,IAAL,KAAc,UAA1D,CAAX;;AACA,UAAIG,IAAI,KAAKG,SAAb,EAAwB;AACpB,YAAIP,EAAE,KAAK,IAAX,EAAiB;AACbL,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAjD,UAAAA,yBAAyB,CAAC6D,MAA1B,CAAiC7C,KAAjC;AACAd,UAAAA,sBAAsB,CAAC4D,OAAvB,CAA+B;AAC3BC,YAAAA,IAAI,EAAE,WADqB;AAE3BT,YAAAA,IAAI,EAAE,UAFqB;AAG3BK,YAAAA,EAAE,EAAE3C;AAHuB,WAA/B;AAKAP,UAAAA,WAAW,CAACT,yBAAyB,CAAC2B,eAA1B,CAA0CX,KAA1C,CAAD,CAAX;AAEH,SAVD,MAUO;AACH,cAAIqC,EAAE,KAAK,MAAX,EAAmB;AACfL,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAjD,YAAAA,yBAAyB,CAACgE,QAA1B,CAAmChD,KAAnC;AAEAd,YAAAA,sBAAsB,CAAC4D,OAAvB,CAA+B;AAC3BC,cAAAA,IAAI,EAAE,WADqB;AAE3BT,cAAAA,IAAI,EAAE,UAFqB;AAG3BK,cAAAA,EAAE,EAAE3C;AAHuB,aAA/B;AAKAP,YAAAA,WAAW,CAACT,yBAAyB,CAAC2B,eAA1B,CAA0CX,KAA1C,CAAD,CAAX;AACH;AACJ;AACJ;AACJ,KA5BD,MA4BO;AACH,UAAI0B,SAAS,GAAG3C,wBAAwB,CAAC4C,WAAzB,EAAhB;AACA,UAAIC,GAAG,GAAGF,SAAS,CAACG,OAAV,CAAkBH,SAAS,CAACI,IAAV,CAAeC,OAAO,IAAIA,OAAO,CAAC9B,IAAR,KAAiBA,IAA3C,CAAlB,CAAV;AACA,UAAIsC,SAAS,GAAGrD,sBAAsB,CAACsD,UAAvB,CAAkC,WAAlC,CAAhB;AACA,UAAIC,IAAI,GAAGF,SAAS,CAACT,IAAV,CAAeY,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYf,GAAZ,IAAmBc,IAAI,CAACJ,IAAL,KAAc,SAAxD,CAAX;;AACA,UAAIG,IAAI,KAAKG,SAAb,EAAwB;AACpB,YAAIP,EAAE,KAAK,IAAX,EAAiB;AACbL,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAlD,UAAAA,wBAAwB,CAAC8D,MAAzB,CAAgCjB,GAAhC;AACA1C,UAAAA,sBAAsB,CAAC4D,OAAvB,CAA+B;AAC3BC,YAAAA,IAAI,EAAE,WADqB;AAE3BT,YAAAA,IAAI,EAAE,SAFqB;AAG3BK,YAAAA,EAAE,EAAEf;AAHuB,WAA/B;AAKAlB,UAAAA,WAAW,CAAC;AACRD,YAAAA,QAAQ,EAAE1B,wBAAwB,CAACoD,UAAzB,CAAoCnC,KAApC;AADF,WAAD,CAAX;AAIH,SAZD,MAYO;AACH,cAAIqC,EAAE,KAAK,MAAX,EAAmB;AACfL,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAlD,YAAAA,wBAAwB,CAACiE,QAAzB,CAAkCpB,GAAlC;AAEA1C,YAAAA,sBAAsB,CAAC4D,OAAvB,CAA+B;AAC3BC,cAAAA,IAAI,EAAE,WADqB;AAE3BT,cAAAA,IAAI,EAAE,SAFqB;AAG3BK,cAAAA,EAAE,EAAEf;AAHuB,aAA/B;AAKAlB,YAAAA,WAAW,CAAC;AACRD,cAAAA,QAAQ,EAAE1B,wBAAwB,CAACoD,UAAzB,CAAoCnC,KAApC;AADF,aAAD,CAAX;AAGH;AACJ;AACJ;AACJ;AACJ,GAhED;;AAkEA,sBAAQ,QAAC,YAAD;AAAc,IAAA,KAAK,EAAER,QAAQ,CAACE,KAA9B;AACJ,IAAA,IAAI,EAAEF,QAAQ,CAACG,IADX;AAEJ,IAAA,UAAU,EAAEH,QAAQ,CAACK,UAFjB;AAGJ,IAAA,IAAI,EAAEL,QAAQ,CAACI,IAHX;AAIJ,IAAA,QAAQ,EAAEa,QAAQ,CAACA,QAJf;AAKJ,IAAA,IAAI,EAAER,IAAI,CAACA,IALP;AAMJ,IAAA,gBAAgB,EAAEe,gBANd;AAOJ,IAAA,YAAY,EAAEE,YAPV;AAQJ,IAAA,iBAAiB,EAAEK,iBARf;AASJ,IAAA,aAAa,EAAEE,aATX;AAUJ,IAAA,WAAW,EAAElB,WAVT;AAWJ,IAAA,MAAM,EAAE6B,MAXJ;AAYJ,IAAA,OAAO,EAAE5C,QAAQ,CAACM,OAZd;AAaJ,IAAA,SAAS,EAAEN,QAAQ,CAACO;AAbhB;AAAA;AAAA;AAAA;AAAA,UAAR;AAgBH;;GA9KQR,iB;UASaF,S;;;KATbE,iB;AA8KR;AACD,eAAeA,iBAAf","sourcesContent":["import ViewQuestion from '../presentational/ViewQuestion'\r\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter'\r\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport VotesPresenterInstance from '../presenter/VotesPresenter'\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport moment from 'moment'\r\n\r\n\r\nfunction SmartViewQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        tags: [],\r\n        createTime: \"\",\r\n        upvotes: 0,\r\n        downvotes: 0\r\n    });\r\n    const { index } = useParams();\r\n\r\n    const [text, setText] = useState({\r\n        text: \"\",\r\n        authorUsername: \"Username1\",\r\n        createTime: \"\",\r\n        referenceQuestion: index,\r\n        upvotes: 0,\r\n        downvotes:0\r\n    });\r\n\r\n    const [chAnsware, setChAnsware] = useState({\r\n        text: \"\"\r\n    });\r\n\r\n    const onChAnsware = (newValue) => {\r\n        setChAnsware({\r\n            text:newValue\r\n        });\r\n    }\r\n\r\n    const [answares, setAnswares] = useState({\r\n        answares: []\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        QuestionPresenterInstance.getQuestionById(index).then(foundQuestion => {\r\n            setQuestion({\r\n                ...foundQuestion\r\n            }\r\n            )\r\n        });\r\n        AnswarePresenterInstance.getAnswaresForQuestion(index).then(foundAnswares => {\r\n            setAnswares({\r\n                answares:[...foundAnswares]\r\n            }\r\n            )\r\n        });\r\n    }, []);\r\n\r\n\r\n    const onChangeTextArea = (property, newValue) => {\r\n        setText({\r\n            ...text,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onAddAnsware = () => {\r\n        var date = new Date()\r\n        setText({\r\n            ...text,\r\n            createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\")\r\n        });\r\n        AnswarePresenterInstance.addAnsware(text).then(foundAnswares => {\r\n            setAnswares({\r\n                answares: [...foundAnswares]\r\n            }\r\n            )\r\n        });\r\n        \r\n    }\r\n\r\n    const onOpenEditAnsware = (proprety,newValue) => {\r\n        setText({\r\n            ...text,\r\n            [proprety]: newValue\r\n        });\r\n    }\r\n\r\n    const onEditAnsware = () => {\r\n        var answaresi = AnswarePresenterInstance.getAnswares()\r\n        var ind = answaresi.indexOf(answaresi.find(element => element.text === chAnsware.text))\r\n        console.log(ind)\r\n        AnswarePresenterInstance.editAnsware(ind, text.text);\r\n        setAnswares({\r\n            answares: AnswarePresenterInstance.getAnsware(index)\r\n        })\r\n    }\r\n\r\n    const onVote = (ud, type, text) => {\r\n        if (type === \"question\") {\r\n            var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\")\r\n            var vote = userVotes.find(item => item.id === index && item.type === \"question\")\r\n            if (vote === undefined) {\r\n                if (ud === \"up\") {\r\n                    console.log(\"am ajuns aici pt up question \" )\r\n                    QuestionPresenterInstance.upvote(index)\r\n                    VotesPresenterInstance.addVote({\r\n                        user: \"Username1\",\r\n                        type: \"question\",\r\n                        id: index\r\n                    });\r\n                    setQuestion(QuestionPresenterInstance.getQuestionById(index))\r\n\r\n                } else {\r\n                    if (ud === \"down\") {\r\n                        console.log(\"am ajuns aici pt down question\")\r\n                        QuestionPresenterInstance.downvote(index)\r\n\r\n                        VotesPresenterInstance.addVote({\r\n                            user: \"Username1\",\r\n                            type: \"question\",\r\n                            id: index\r\n                        });\r\n                        setQuestion(QuestionPresenterInstance.getQuestionById(index))\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            var answaresi = AnswarePresenterInstance.getAnswares()\r\n            var ind = answaresi.indexOf(answaresi.find(element => element.text === text))\r\n            var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\")\r\n            var vote = userVotes.find(item => item.id === ind && item.type === \"answare\")\r\n            if (vote === undefined) {\r\n                if (ud === \"up\") {\r\n                    console.log(\"am ajuns aici pt up answare\")\r\n                    AnswarePresenterInstance.upvote(ind)\r\n                    VotesPresenterInstance.addVote({\r\n                        user: \"Username1\",\r\n                        type: \"answare\",\r\n                        id: ind\r\n                    });\r\n                    setAnswares({\r\n                        answares: AnswarePresenterInstance.getAnsware(index)\r\n                    })\r\n\r\n                } else {\r\n                    if (ud === \"down\") {\r\n                        console.log(\"am ajuns aici pt down answare\")\r\n                        AnswarePresenterInstance.downvote(ind)\r\n\r\n                        VotesPresenterInstance.addVote({\r\n                            user: \"Username1\",\r\n                            type: \"answare\",\r\n                            id: ind\r\n                        });\r\n                        setAnswares({\r\n                            answares: AnswarePresenterInstance.getAnsware(index)\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (<ViewQuestion title={question.title}\r\n        body={question.body}\r\n        createTime={question.createTime}\r\n        tags={question.tags}\r\n        answares={answares.answares}\r\n        text={text.text}\r\n        onChangeTextArea={onChangeTextArea}\r\n        onAddAnsware={onAddAnsware}\r\n        onOpenEditAnsware={onOpenEditAnsware}\r\n        onEditAnsware={onEditAnsware}\r\n        onChAnsware={onChAnsware}\r\n        onVote={onVote}\r\n        upvotes={question.upvotes}\r\n        downvotes={question.downvotes}\r\n    />\r\n    );\r\n};\r\nexport default SmartViewQuestion\r\n"]},"metadata":{},"sourceType":"module"}