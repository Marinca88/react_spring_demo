{"ast":null,"code":"import AnswareInstance from '../model/Answare';\nimport RestClient from '../rest/RestClient'; //const client = new RestClient(\"username1\", \"password\");\n\nclass AnswarePresenter {\n  async addAnsware(newAnsware, client) {\n    var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  removeAnsware(index) {\n    return AnswareInstance.removeAnsware(index);\n  }\n\n  async editAnsware(answare, text, client) {\n    console.log(answare);\n    console.log(text);\n    var answares = await client.loadAllAnswares();\n    var ind = answares.indexOf(answares.find(element => element.text === text && answare.authorUsername == element.author && element.question_id == answare.referenceQuestion + 1));\n    var el = await client.editAnsware(ind, answare.text);\n\n    if (el.message == \"Updated\") {\n      var returnedAnswares = await client.loadAnswaresForQuestion(answare.referenceQuestion);\n      console.log(returnedAnswares);\n      AnswareInstance.addAnswares(returnedAnswares);\n      return returnedAnswares;\n    } else {\n      return AnswareInstance.getAnswares();\n    }\n  }\n\n  async getAnswaresForQuestion(index, client) {\n    var answares = await client.loadAnswaresForQuestion(index);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  getAnswares() {\n    return AnswareInstance.getAnswares();\n  }\n\n  async upvote(index, answare, client) {\n    console.log(answare);\n    var answares = await client.loadAllAnswares();\n    console.log(answares);\n    var id = answares.indexOf(answares.find(element => element.text === answare.text && answare.author === element.author && element.question_id === answare.question_id));\n    console.log(id);\n    var a = await client.upvoteAnsware(id, index);\n    console.log(a);\n    return a;\n  }\n\n  async downvote(index, answare, client) {\n    console.log(answare);\n    var answares = await client.loadAllAnswares();\n    var id = answares.indexOf(answares.find(element => element.text === answare.text && answare.author === element.author && element.question_id === answare.question_id));\n    var answares = await client.downvoteAnsware(id, index);\n    return answares;\n  }\n\n  getVotes(index) {\n    return AnswareInstance.getVotes(index);\n  }\n\n}\n\nconst AnswarePresenterInstance = new AnswarePresenter();\nexport default AnswarePresenterInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/git_demo/frontend/assigenemnt2/src/presenter/AnswarePresenter.js"],"names":["AnswareInstance","RestClient","AnswarePresenter","addAnsware","newAnsware","client","answares","loadRefreshedAnswares","upvotes","downvotes","text","referenceQuestion","addAnswares","getAnswares","removeAnsware","index","editAnsware","answare","console","log","loadAllAnswares","ind","indexOf","find","element","authorUsername","author","question_id","el","message","returnedAnswares","loadAnswaresForQuestion","getAnswaresForQuestion","upvote","id","a","upvoteAnsware","downvote","downvoteAnsware","getVotes","AnswarePresenterInstance"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAEA;;AACA,MAAMC,gBAAN,CAAuB;AACH,QAAVC,UAAU,CAACC,UAAD,EAAYC,MAAZ,EAAoB;AAChC,QAAIC,QAAQ,GAAG,MAAMD,MAAM,CAACE,qBAAP,CAA6BH,UAAU,CAACI,OAAxC,EAAiDJ,UAAU,CAACK,SAA5D,EAAuEL,UAAU,CAACM,IAAlF,EAAwFN,UAAU,CAACO,iBAAnG,CAArB;AACAX,IAAAA,eAAe,CAACY,WAAhB,CAA4BN,QAA5B;AACA,WAAON,eAAe,CAACa,WAAhB,EAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,WAAOf,eAAe,CAACc,aAAhB,CAA8BC,KAA9B,CAAP;AACH;;AAEgB,QAAXC,WAAW,CAACC,OAAD,EAASP,IAAT,EAAcL,MAAd,EAAsB;AACnCa,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AACA,QAAIJ,QAAQ,GAAG,MAAMD,MAAM,CAACe,eAAP,EAArB;AACA,QAAIC,GAAG,GAAGf,QAAQ,CAACgB,OAAT,CAAiBhB,QAAQ,CAACiB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACd,IAAR,KAAiBA,IAAjB,IAAyBO,OAAO,CAACQ,cAAR,IAA0BD,OAAO,CAACE,MAA3D,IAAqEF,OAAO,CAACG,WAAR,IAAwBV,OAAO,CAACN,iBAAR,GAA0B,CAAhJ,CAAjB,CAAV;AACA,QAAIiB,EAAE,GAAG,MAAMvB,MAAM,CAACW,WAAP,CAAmBK,GAAnB,EAAwBJ,OAAO,CAACP,IAAhC,CAAf;;AACA,QAAIkB,EAAE,CAACC,OAAH,IAAc,SAAlB,EAA6B;AACzB,UAAIC,gBAAgB,GAAG,MAAMzB,MAAM,CAAC0B,uBAAP,CAA+Bd,OAAO,CAACN,iBAAvC,CAA7B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYW,gBAAZ;AACA9B,MAAAA,eAAe,CAACY,WAAhB,CAA4BkB,gBAA5B;AACA,aAAOA,gBAAP;AACH,KALD,MAKO;AACH,aAAO9B,eAAe,CAACa,WAAhB,EAAP;AACH;AACJ;;AAC2B,QAAtBmB,sBAAsB,CAACjB,KAAD,EAAOV,MAAP,EAAe;AACvC,QAAIC,QAAQ,GAAG,MAAMD,MAAM,CAAC0B,uBAAP,CAA+BhB,KAA/B,CAArB;AACAf,IAAAA,eAAe,CAACY,WAAhB,CAA4BN,QAA5B;AACA,WAAON,eAAe,CAACa,WAAhB,EAAP;AACH;;AACDA,EAAAA,WAAW,GAAG;AACV,WAAOb,eAAe,CAACa,WAAhB,EAAP;AACH;;AAEW,QAANoB,MAAM,CAAClB,KAAD,EAAQE,OAAR,EAAgBZ,MAAhB,EAAwB;AAChCa,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIX,QAAQ,GAAG,MAAMD,MAAM,CAACe,eAAP,EAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ;AACA,QAAI4B,EAAE,GAAG5B,QAAQ,CAACgB,OAAT,CAAiBhB,QAAQ,CAACiB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACd,IAAR,KAAiBO,OAAO,CAACP,IAAzB,IAAiCO,OAAO,CAACS,MAAR,KAAmBF,OAAO,CAACE,MAA5D,IAAsEF,OAAO,CAACG,WAAR,KAAwBV,OAAO,CAACU,WAA/H,CAAjB,CAAT;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYe,EAAZ;AACA,QAAIC,CAAC,GAAG,MAAM9B,MAAM,CAAC+B,aAAP,CAAqBF,EAArB,EAAyBnB,KAAzB,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYgB,CAAZ;AACA,WAAOA,CAAP;AACH;;AAEa,QAARE,QAAQ,CAACtB,KAAD,EAAQE,OAAR,EAAgBZ,MAAhB,EAAwB;AAClCa,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAIX,QAAQ,GAAG,MAAMD,MAAM,CAACe,eAAP,EAArB;AACA,QAAIc,EAAE,GAAG5B,QAAQ,CAACgB,OAAT,CAAiBhB,QAAQ,CAACiB,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACd,IAAR,KAAiBO,OAAO,CAACP,IAAzB,IAAiCO,OAAO,CAACS,MAAR,KAAmBF,OAAO,CAACE,MAA5D,IAAsEF,OAAO,CAACG,WAAR,KAAwBV,OAAO,CAACU,WAA/H,CAAjB,CAAT;AACA,QAAIrB,QAAQ,GAAG,MAAMD,MAAM,CAACiC,eAAP,CAAuBJ,EAAvB,EAA2BnB,KAA3B,CAArB;AACA,WAAOT,QAAP;AACH;;AAEDiC,EAAAA,QAAQ,CAACxB,KAAD,EAAQ;AACZ,WAAOf,eAAe,CAACuC,QAAhB,CAAyBxB,KAAzB,CAAP;AACH;;AAxDkB;;AA0DvB,MAAMyB,wBAAwB,GAAG,IAAItC,gBAAJ,EAAjC;AACA,eAAesC,wBAAf","sourcesContent":["import AnswareInstance from '../model/Answare'\r\nimport RestClient from '../rest/RestClient';\r\n\r\n//const client = new RestClient(\"username1\", \"password\");\r\nclass AnswarePresenter {\r\n    async addAnsware(newAnsware,client) {\r\n        var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion)\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    removeAnsware(index) {\r\n        return AnswareInstance.removeAnsware(index);\r\n    }\r\n\r\n    async editAnsware(answare,text,client) {\r\n        console.log(answare)\r\n        console.log(text)\r\n        var answares = await client.loadAllAnswares()\r\n        var ind = answares.indexOf(answares.find(element => element.text === text && answare.authorUsername == element.author && element.question_id == (answare.referenceQuestion+1)));\r\n        var el = await client.editAnsware(ind, answare.text);\r\n        if (el.message == \"Updated\") {\r\n            var returnedAnswares = await client.loadAnswaresForQuestion(answare.referenceQuestion);\r\n            console.log(returnedAnswares)\r\n            AnswareInstance.addAnswares(returnedAnswares)\r\n            return returnedAnswares;\r\n        } else {\r\n            return AnswareInstance.getAnswares()\r\n        }\r\n    }\r\n    async getAnswaresForQuestion(index,client) {\r\n        var answares = await client.loadAnswaresForQuestion(index);\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n    getAnswares() {\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    async upvote(index, answare,client) {\r\n        console.log(answare)\r\n        var answares = await client.loadAllAnswares()\r\n        console.log(answares)\r\n        var id = answares.indexOf(answares.find(element => element.text === answare.text && answare.author === element.author && element.question_id === answare.question_id));\r\n        console.log(id)\r\n        var a = await client.upvoteAnsware(id, index);\r\n        console.log(a);\r\n        return a;\r\n    }\r\n\r\n    async downvote(index, answare,client) {\r\n        console.log(answare)\r\n        var answares = await client.loadAllAnswares()\r\n        var id = answares.indexOf(answares.find(element => element.text === answare.text && answare.author === element.author && element.question_id === answare.question_id));\r\n        var answares = await client.downvoteAnsware(id, index);\r\n        return answares;\r\n    }\r\n\r\n    getVotes(index) {\r\n        return AnswareInstance.getVotes(index);\r\n    }\r\n}\r\nconst AnswarePresenterInstance = new AnswarePresenter();\r\nexport default AnswarePresenterInstance;"]},"metadata":{},"sourceType":"module"}