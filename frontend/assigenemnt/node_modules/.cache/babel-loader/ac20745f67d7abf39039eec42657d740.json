{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartCreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport TagPresenterInstance from '../presenter/TagPresenter';\nimport CreateQuestion from '../presentational/CreateQuestion';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartCreateQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    author: \"\",\n    createTime: \"\",\n    tags: [{\n      text: \"hello\"\n    }],\n    upvotes: 0,\n    downvotes: 0\n  });\n  const [tagText, setTagText] = useState({\n    text: \"\"\n  });\n  const [allTags, setTags] = useState({\n    tags: []\n  });\n  useEffect(() => {\n    TagPresenterInstance.getTags().then(foundQuestions => {\n      setTags({\n        tags: [...foundQuestions]\n      });\n    });\n  }, []);\n\n  const onChange = (property, newValue) => {\n    setQuestion({ ...question,\n      [property]: newValue\n    });\n  };\n\n  const onChangeTagText = newValue => {\n    setTagText({\n      text: newValue\n    });\n  };\n\n  const onSaveNewTag = () => {\n    TagPresenterInstance.addTag(tagText.text);\n    setQuestion({ ...question,\n      tags: [...question.tags, tagText.text]\n    });\n  };\n\n  const onAddTag = tag => {\n    setQuestion({ ...question,\n      tags: [...question.tags, {\n        text: tag\n      }]\n    });\n    console.log(question);\n  };\n\n  const onRemoveTag = tag => {\n    var tgs = question.tags;\n    tgs.splice(tgs.indexOf(tag), 1);\n    setQuestion({ ...question,\n      tags: tgs\n    });\n  };\n\n  const onSave = () => {\n    QuestionPresenterInstance.addQuestion(question);\n    window.location.assign(\"#/home\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreateQuestion, {\n    title: question.title,\n    body: question.body,\n    tags: question.tags,\n    allTags: allTags.tags,\n    onChange: onChange,\n    onRemoveTag: onRemoveTag,\n    onAddTag: onAddTag,\n    onSave: onSave,\n    onChangeTagText: onChangeTagText,\n    onSaveNewTag: onSaveNewTag,\n    nwTag: tagText.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SmartCreateQuestion, \"vrCXdDdkqMk+Pi8AnedVe5E7bnY=\");\n\n_c = SmartCreateQuestion;\nexport default SmartCreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartCreateQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartCreateQuestion.js"],"names":["QuestionPresenterInstance","TagPresenterInstance","CreateQuestion","useEffect","useState","SmartCreateQuestion","question","setQuestion","title","body","author","createTime","tags","text","upvotes","downvotes","tagText","setTagText","allTags","setTags","getTags","then","foundQuestions","onChange","property","newValue","onChangeTagText","onSaveNewTag","addTag","onAddTag","tag","console","log","onRemoveTag","tgs","splice","indexOf","onSave","addQuestion","window","location","assign"],"mappings":"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","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport TagPresenterInstance from '../presenter/TagPresenter'\r\nimport CreateQuestion from '../presentational/CreateQuestion'\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction SmartCreateQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        author: \"\",\r\n        createTime: \"\",\r\n        tags: [{text:\"hello\"}],\r\n        upvotes: 0,\r\n        downvotes: 0\r\n    });\r\n\r\n    const [tagText, setTagText] = useState({\r\n        text: \"\"\r\n    });\r\n\r\n    const [allTags, setTags] = useState({\r\n        tags: []\r\n    })\r\n\r\n    useEffect(() => {\r\n        TagPresenterInstance.getTags().then(foundQuestions => {\r\n            setTags({\r\n                tags: [...foundQuestions]\r\n            })\r\n        });\r\n    }, []);\r\n\r\n    const onChange = (property, newValue) => {\r\n        setQuestion({\r\n            ...question,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n    const onChangeTagText = (newValue) => {\r\n        setTagText({\r\n            text: newValue\r\n        });\r\n    }\r\n\r\n    const onSaveNewTag = () => {\r\n        TagPresenterInstance.addTag(tagText.text);\r\n        setQuestion({\r\n            ...question,\r\n            tags: [...question.tags, tagText.text]\r\n        });\r\n    }\r\n\r\n    const onAddTag = (tag) => {\r\n        setQuestion({\r\n            ...question,\r\n            tags: [...question.tags, {text:tag}]\r\n        });\r\n        console.log(question)\r\n    }\r\n\r\n    const onRemoveTag = (tag) => {\r\n        var tgs = question.tags;\r\n        tgs.splice(tgs.indexOf(tag), 1);\r\n        setQuestion({\r\n            ...question,\r\n            tags:tgs\r\n        });\r\n    }\r\n\r\n    const onSave = () => {\r\n        QuestionPresenterInstance.addQuestion(question);\r\n        window.location.assign(\"#/home\");\r\n    }\r\n\r\n    return (<CreateQuestion title={question.title} body={question.body} tags={question.tags} allTags={allTags.tags} onChange={onChange} onRemoveTag={onRemoveTag} onAddTag={onAddTag} onSave={onSave} onChangeTagText={onChangeTagText} onSaveNewTag={onSaveNewTag} nwTag={tagText.text} />\r\n    );\r\n}\r\nexport default SmartCreateQuestion;"]},"metadata":{},"sourceType":"module"}