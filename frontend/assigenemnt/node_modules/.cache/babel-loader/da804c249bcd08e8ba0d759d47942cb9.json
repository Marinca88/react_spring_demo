{"ast":null,"code":"class Answare {\n  constructor() {\n    this.state = {\n      answares: []\n    };\n  }\n\n  addAnsware(newAnsware) {\n    this.state.answares = [...this.state.answares, { ...newAnsware\n    }];\n  }\n\n  removeAnsware(index) {\n    this.state.answares = this.state.answares.filter(element => this.state.answares.indexOf(element) != index);\n  }\n\n  editAnsware(index, text) {\n    console.log(\"before \" + this.state.answares[index].text);\n    this.state.answares[index].text = text;\n    console.log(\"after \" + this.state.answares[index].text);\n  }\n\n  getAnsware(index) {\n    return this.state.answares.filter(element => element.referenceQuestion == index);\n  }\n\n  getAnswares() {\n    return this.state.answares;\n  }\n\n  upvote(index) {\n    console.log(\"before \" + index + \" \" + this.state.answares[index].upvotes);\n    this.state.answares[index].upvotes = this.state.answares[index].upvotes + 1;\n    console.log(\"after \" + index + \" \" + this.state.answares[index].upvotes);\n  }\n\n  downvote(index) {\n    this.state.answares[index].downvotes = this.state.answares[index].downvotes + 1;\n  }\n\n  getVotes(index) {\n    var votes = this.state.answares[index].upvotes - this.state.answares[index].downvotes;\n    return votes;\n  }\n\n}\n\nconst AnswareInstance = new Answare();\nexport default AnswareInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/model/Answare.js"],"names":["Answare","constructor","state","answares","addAnsware","newAnsware","removeAnsware","index","filter","element","indexOf","editAnsware","text","console","log","getAnsware","referenceQuestion","getAnswares","upvote","upvotes","downvote","downvotes","getVotes","votes","AnswareInstance"],"mappings":"AAAA,MAAMA,OAAN,CAAc;AACVC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,UAAU,CAACC,UAAD,EAAa;AACnB,SAAKH,KAAL,CAAWC,QAAX,GAAsB,CAClB,GAAG,KAAKD,KAAL,CAAWC,QADI,EAElB,EACI,GAAGE;AADP,KAFkB,CAAtB;AAMH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,SAAKL,KAAL,CAAWC,QAAX,GAAsB,KAAKD,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,OAAO,IAAI,KAAKP,KAAL,CAAWC,QAAX,CAAoBO,OAApB,CAA4BD,OAA5B,KAAwCF,KAA9E,CAAtB;AACH;;AAEDI,EAAAA,WAAW,CAACJ,KAAD,EAAQK,IAAR,EAAc;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAa,YAAY,KAAKZ,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BK,IAApD;AACA,SAAKV,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BK,IAA3B,GAAkCA,IAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAW,KAAKZ,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BK,IAAlD;AACH;;AAEDG,EAAAA,UAAU,CAACR,KAAD,EAAQ;AACd,WAAO,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,MAApB,CAA2BC,OAAO,IAAIA,OAAO,CAACO,iBAAR,IAA2BT,KAAjE,CAAP;AACH;;AAEDU,EAAAA,WAAW,GAAG;AACV,WAAO,KAAKf,KAAL,CAAWC,QAAlB;AACH;;AAEDe,EAAAA,MAAM,CAACX,KAAD,EAAQ;AACVM,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAWP,KAAX,GAAmB,GAAnB,GAAyB,KAAKL,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BY,OAAhE;AACA,SAAKjB,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BY,OAA3B,GAAqC,KAAKjB,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BY,OAA3B,GAAqC,CAA1E;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAUP,KAAV,GAAkB,GAAlB,GAAuB,KAAKL,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BY,OAA9D;AACH;;AAEDC,EAAAA,QAAQ,CAACb,KAAD,EAAQ;AACZ,SAAKL,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2Bc,SAA3B,GAAuC,KAAKnB,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2Bc,SAA3B,GAAuC,CAA9E;AACH;;AAEDC,EAAAA,QAAQ,CAACf,KAAD,EAAQ;AACZ,QAAIgB,KAAK,GAAG,KAAKrB,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2BY,OAA3B,GAAqC,KAAKjB,KAAL,CAAWC,QAAX,CAAoBI,KAApB,EAA2Bc,SAA5E;AACA,WAAOE,KAAP;AACH;;AA/CS;;AAkDd,MAAMC,eAAe,GAAG,IAAIxB,OAAJ,EAAxB;AACA,eAAewB,eAAf","sourcesContent":["class Answare {\r\n    constructor() {\r\n        this.state = {\r\n            answares: []\r\n        };\r\n    }\r\n\r\n    addAnsware(newAnsware) {\r\n        this.state.answares = [\r\n            ...this.state.answares,\r\n            {\r\n                ...newAnsware\r\n            }\r\n        ];\r\n    }\r\n\r\n    removeAnsware(index) {\r\n        this.state.answares = this.state.answares.filter(element => this.state.answares.indexOf(element) != index);\r\n    }\r\n\r\n    editAnsware(index, text) {\r\n        console.log( \"before \" + this.state.answares[index].text)\r\n        this.state.answares[index].text = text;\r\n        console.log(\"after \" + this.state.answares[index].text)\r\n    }\r\n\r\n    getAnsware(index) {\r\n        return this.state.answares.filter(element => element.referenceQuestion==index)\r\n    }\r\n\r\n    getAnswares() {\r\n        return this.state.answares;\r\n    }\r\n\r\n    upvote(index) {\r\n        console.log(\"before \" +index + \" \" + this.state.answares[index].upvotes)\r\n        this.state.answares[index].upvotes = this.state.answares[index].upvotes + 1;\r\n        console.log(\"after \" +index + \" \" +this.state.answares[index].upvotes)\r\n    }\r\n\r\n    downvote(index) {\r\n        this.state.answares[index].downvotes = this.state.answares[index].downvotes + 1;\r\n    }\r\n\r\n    getVotes(index) {\r\n        var votes = this.state.answares[index].upvotes - this.state.answares[index].downvotes\r\n        return votes\r\n    }\r\n\r\n}\r\nconst AnswareInstance = new Answare();\r\nexport default AnswareInstance;"]},"metadata":{},"sourceType":"module"}