{"ast":null,"code":"import AnswareInstance from '../model/Answare';\nimport RestClient from '../rest/RestClient';\nconst client = new RestClient(\"username1\", \"password\");\n\nclass AnswarePresenter {\n  async addAnsware(newAnsware) {\n    console.log(newAnsware);\n    var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  removeAnsware(index) {\n    return AnswareInstance.removeAnsware(index);\n  }\n\n  async editAnsware(answare) {\n    var answares = await client.loadAnswares();\n    var ind = answares.indexOf(answares.find(element => element.text === answare.text && answare.authorUsername == element.author && element.question_id == answare.referenceQuestion));\n    client.editAnsware(ind, answare.text);\n    var returnedAnswares = await client.loadAnswaresForQuestion(index);\n  }\n\n  async getAnswaresForQuestion(index) {\n    var answares = await client.loadAnswaresForQuestion(index);\n    AnswareInstance.addAnswares(answares);\n    return AnswareInstance.getAnswares();\n  }\n\n  getAnswares() {\n    return AnswareInstance.getAnswares();\n  }\n\n  upvote(index) {\n    return AnswareInstance.upvote(index);\n  }\n\n  downvote(index) {\n    return AnswareInstance.downvote(index);\n  }\n\n  getVotes(index) {\n    return AnswareInstance.getVotes(index);\n  }\n\n}\n\nconst AnswarePresenterInstance = new AnswarePresenter();\nexport default AnswarePresenterInstance;","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/presenter/AnswarePresenter.js"],"names":["AnswareInstance","RestClient","client","AnswarePresenter","addAnsware","newAnsware","console","log","answares","loadRefreshedAnswares","upvotes","downvotes","text","referenceQuestion","addAnswares","getAnswares","removeAnsware","index","editAnsware","answare","loadAnswares","ind","indexOf","find","element","authorUsername","author","question_id","returnedAnswares","loadAnswaresForQuestion","getAnswaresForQuestion","upvote","downvote","getVotes","AnswarePresenterInstance"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AAEA,MAAMC,MAAM,GAAG,IAAID,UAAJ,CAAe,WAAf,EAA4B,UAA5B,CAAf;;AACA,MAAME,gBAAN,CAAuB;AACH,QAAVC,UAAU,CAACC,UAAD,EAAa;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAIG,QAAQ,GAAG,MAAMN,MAAM,CAACO,qBAAP,CAA6BJ,UAAU,CAACK,OAAxC,EAAiDL,UAAU,CAACM,SAA5D,EAAuEN,UAAU,CAACO,IAAlF,EAAwFP,UAAU,CAACQ,iBAAnG,CAArB;AACAb,IAAAA,eAAe,CAACc,WAAhB,CAA4BN,QAA5B;AACA,WAAOR,eAAe,CAACe,WAAhB,EAAP;AACH;;AAEDC,EAAAA,aAAa,CAACC,KAAD,EAAQ;AACjB,WAAOjB,eAAe,CAACgB,aAAhB,CAA8BC,KAA9B,CAAP;AACH;;AAEgB,QAAXC,WAAW,CAACC,OAAD,EAAU;AACvB,QAAIX,QAAQ,GAAG,MAAMN,MAAM,CAACkB,YAAP,EAArB;AACA,QAAIC,GAAG,GAAGb,QAAQ,CAACc,OAAT,CAAiBd,QAAQ,CAACe,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACZ,IAAR,KAAiBO,OAAO,CAACP,IAAzB,IAAiCO,OAAO,CAACM,cAAR,IAA0BD,OAAO,CAACE,MAAnE,IAA6EF,OAAO,CAACG,WAAR,IAAuBR,OAAO,CAACN,iBAArI,CAAjB,CAAV;AACAX,IAAAA,MAAM,CAACgB,WAAP,CAAmBG,GAAnB,EAAwBF,OAAO,CAACP,IAAhC;AACA,QAAIgB,gBAAgB,GAAG,MAAM1B,MAAM,CAAC2B,uBAAP,CAA+BZ,KAA/B,CAA7B;AACH;;AAC2B,QAAtBa,sBAAsB,CAACb,KAAD,EAAQ;AAChC,QAAIT,QAAQ,GAAG,MAAMN,MAAM,CAAC2B,uBAAP,CAA+BZ,KAA/B,CAArB;AACAjB,IAAAA,eAAe,CAACc,WAAhB,CAA4BN,QAA5B;AACA,WAAOR,eAAe,CAACe,WAAhB,EAAP;AACH;;AACDA,EAAAA,WAAW,GAAG;AACV,WAAOf,eAAe,CAACe,WAAhB,EAAP;AACH;;AAEDgB,EAAAA,MAAM,CAACd,KAAD,EAAQ;AACV,WAAOjB,eAAe,CAAC+B,MAAhB,CAAuBd,KAAvB,CAAP;AACH;;AAEDe,EAAAA,QAAQ,CAACf,KAAD,EAAQ;AACZ,WAAOjB,eAAe,CAACgC,QAAhB,CAAyBf,KAAzB,CAAP;AACH;;AAEDgB,EAAAA,QAAQ,CAAChB,KAAD,EAAQ;AACZ,WAAOjB,eAAe,CAACiC,QAAhB,CAAyBhB,KAAzB,CAAP;AACH;;AArCkB;;AAuCvB,MAAMiB,wBAAwB,GAAG,IAAI/B,gBAAJ,EAAjC;AACA,eAAe+B,wBAAf","sourcesContent":["import AnswareInstance from '../model/Answare'\r\nimport RestClient from '../rest/RestClient';\r\n\r\nconst client = new RestClient(\"username1\", \"password\");\r\nclass AnswarePresenter {\r\n    async addAnsware(newAnsware) {\r\n        console.log(newAnsware);\r\n        var answares = await client.loadRefreshedAnswares(newAnsware.upvotes, newAnsware.downvotes, newAnsware.text, newAnsware.referenceQuestion)\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    removeAnsware(index) {\r\n        return AnswareInstance.removeAnsware(index);\r\n    }\r\n\r\n    async editAnsware(answare) {\r\n        var answares = await client.loadAnswares();\r\n        var ind = answares.indexOf(answares.find(element => element.text === answare.text && answare.authorUsername == element.author && element.question_id == answare.referenceQuestion));\r\n        client.editAnsware(ind, answare.text);\r\n        var returnedAnswares = await client.loadAnswaresForQuestion(index);\r\n    }\r\n    async getAnswaresForQuestion(index) {\r\n        var answares = await client.loadAnswaresForQuestion(index);\r\n        AnswareInstance.addAnswares(answares);\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n    getAnswares() {\r\n        return AnswareInstance.getAnswares();\r\n    }\r\n\r\n    upvote(index) {\r\n        return AnswareInstance.upvote(index);\r\n    }\r\n\r\n    downvote(index) {\r\n        return AnswareInstance.downvote(index);\r\n    }\r\n\r\n    getVotes(index) {\r\n        return AnswareInstance.getVotes(index);\r\n    }\r\n}\r\nconst AnswarePresenterInstance = new AnswarePresenter();\r\nexport default AnswarePresenterInstance;"]},"metadata":{},"sourceType":"module"}