{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmrtViewQuestion.js\",\n    _s = $RefreshSig$();\n\nimport ViewQuestion from '../presentational/ViewQuestion';\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter';\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartViewQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    tags: [],\n    createTime: \"\"\n  });\n  const {\n    index\n  } = useParams();\n  const [text, setText] = useState({\n    text: \"\",\n    authorUsername: \"Username1\",\n    createTime: \"\",\n    referenceQuestion: index\n  });\n  const [chAnsware, setChAnsware] = useState({\n    text: \"\"\n  });\n\n  const onChAnsware = newValue => {\n    setChAnsware({\n      text: newValue\n    });\n  };\n\n  const [answares, setAnswares] = useState({\n    answares: AnswarePresenterInstance.getAnsware(index)\n  });\n  useEffect(() => {\n    setQuestion(QuestionPresenterInstance.getQuestionById(index));\n  }, []);\n\n  const onChangeTextArea = (property, newValue) => {\n    setText({ ...text,\n      [property]: newValue\n    });\n  };\n\n  const onAddAnsware = () => {\n    const date = new Date();\n    setText({ ...text,\n      createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\")\n    });\n    AnswarePresenterInstance.addAnsware(text);\n    setAnswares({\n      answares: AnswarePresenterInstance.getAnsware(index)\n    });\n  };\n\n  const onOpenEditAnsware = (proprety, newValue) => {\n    setText({ ...text,\n      [proprety]: newValue\n    });\n  };\n\n  const onEditAnsware = () => {\n    var answaresi = AnswarePresenterInstance.getAnswares();\n    console.log(answaresi.find(element => element.text === chAnsware.text).text);\n    var ind = answaresi.indexOf(answaresi.filter(e => e.text.match(chAnsware.text)));\n    console.log(ind);\n    AnswarePresenterInstance.editAnsware(ind, text.text);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ViewQuestion, {\n    title: question.title,\n    body: question.body,\n    createTime: question.createTime,\n    tags: question.tags,\n    answares: answares.answares,\n    text: text.text,\n    onChangeTextArea: onChangeTextArea,\n    onAddAnsware: onAddAnsware,\n    onOpenEditAnsware: onOpenEditAnsware,\n    onEditAnsware: onEditAnsware,\n    onChAnsware: onChAnsware\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SmartViewQuestion, \"oNa9iGU6KretzxYgkbzKJUxjpj4=\", false, function () {\n  return [useParams];\n});\n\n_c = SmartViewQuestion;\n;\nexport default SmartViewQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartViewQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmrtViewQuestion.js"],"names":["ViewQuestion","AnswarePresenterInstance","QuestionPresenterInstance","AppPresenterInstance","useEffect","useState","useParams","moment","SmartViewQuestion","question","setQuestion","title","body","tags","createTime","index","text","setText","authorUsername","referenceQuestion","chAnsware","setChAnsware","onChAnsware","newValue","answares","setAnswares","getAnsware","getQuestionById","onChangeTextArea","property","onAddAnsware","date","Date","format","addAnsware","onOpenEditAnsware","proprety","onEditAnsware","answaresi","getAnswares","console","log","find","element","ind","indexOf","filter","e","match","editAnsware"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,gCAAzB;AACA,OAAOC,wBAAP,MAAqC,+BAArC;AACA,OAAOC,yBAAP,MAAsC,gCAAtC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,iBAAT,GAA6B;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACrCM,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,IAAI,EAAE,EAH+B;AAIrCC,IAAAA,UAAU,EAAC;AAJ0B,GAAD,CAAxC;AAMA,QAAM;AAAEC,IAAAA;AAAF,MAAYT,SAAS,EAA3B;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7BW,IAAAA,IAAI,EAAE,EADuB;AAE7BE,IAAAA,cAAc,EAAE,WAFa;AAG7BJ,IAAAA,UAAU,EAAE,EAHiB;AAI7BK,IAAAA,iBAAiB,EAAEJ;AAJU,GAAD,CAAhC;AAOA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC;AACvCW,IAAAA,IAAI,EAAE;AADiC,GAAD,CAA1C;;AAIA,QAAMM,WAAW,GAAIC,QAAD,IAAc;AAC9BF,IAAAA,YAAY,CAAC;AACTL,MAAAA,IAAI,EAACO;AADI,KAAD,CAAZ;AAGH,GAJD;;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC;AACrCmB,IAAAA,QAAQ,EAAEvB,wBAAwB,CAACyB,UAAzB,CAAoCX,KAApC;AAD2B,GAAD,CAAxC;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAACR,yBAAyB,CAACyB,eAA1B,CAA0CZ,KAA1C,CAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMa,gBAAgB,GAAG,CAACC,QAAD,EAAWN,QAAX,KAAwB;AAC7CN,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACa,QAAD,GAAYN;AAFR,KAAD,CAAP;AAIH,GALD;;AASA,QAAMO,YAAY,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAf,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJF,MAAAA,UAAU,EAAEP,MAAM,CAACwB,IAAD,CAAN,CAAaE,MAAb,CAAoB,qBAApB;AAFR,KAAD,CAAP;AAIAhC,IAAAA,wBAAwB,CAACiC,UAAzB,CAAoClB,IAApC;AACAS,IAAAA,WAAW,CAAC;AACRD,MAAAA,QAAQ,EAAEvB,wBAAwB,CAACyB,UAAzB,CAAoCX,KAApC;AADF,KAAD,CAAX;AAIH,GAXD;;AAaA,QAAMoB,iBAAiB,GAAG,CAACC,QAAD,EAAUb,QAAV,KAAuB;AAC7CN,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACoB,QAAD,GAAYb;AAFR,KAAD,CAAP;AAIH,GALD;;AAOA,QAAMc,aAAa,GAAG,MAAM;AACxB,QAAIC,SAAS,GAAGrC,wBAAwB,CAACsC,WAAzB,EAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACI,IAAV,CAAeC,OAAO,IAAIA,OAAO,CAAC3B,IAAR,KAAiBI,SAAS,CAACJ,IAArD,EAA2DA,IAAvE;AACA,QAAI4B,GAAG,GAAGN,SAAS,CAACO,OAAV,CAAkBP,SAAS,CAACQ,MAAV,CAAiBC,CAAC,IAAGA,CAAC,CAAC/B,IAAF,CAAOgC,KAAP,CAAa5B,SAAS,CAACJ,IAAvB,CAArB,CAAlB,CAAV;AACAwB,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA3C,IAAAA,wBAAwB,CAACgD,WAAzB,CAAqCL,GAArC,EAA0C5B,IAAI,CAACA,IAA/C;AACH,GAND;;AAQA,sBAAQ,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEP,QAAQ,CAACE,KAA9B;AACJ,IAAA,IAAI,EAAEF,QAAQ,CAACG,IADX;AAEJ,IAAA,UAAU,EAAEH,QAAQ,CAACK,UAFjB;AAGJ,IAAA,IAAI,EAAEL,QAAQ,CAACI,IAHX;AAIJ,IAAA,QAAQ,EAAEW,QAAQ,CAACA,QAJf;AAKJ,IAAA,IAAI,EAAER,IAAI,CAACA,IALP;AAMJ,IAAA,gBAAgB,EAAEY,gBANd;AAOJ,IAAA,YAAY,EAAEE,YAPV;AAQJ,IAAA,iBAAiB,EAAEK,iBARf;AASJ,IAAA,aAAa,EAAEE,aATX;AAUJ,IAAA,WAAW,EAAEf;AAVT;AAAA;AAAA;AAAA;AAAA,UAAR;AAaH;;GArFQd,iB;UAOaF,S;;;KAPbE,iB;AAqFR;AACD,eAAeA,iBAAf","sourcesContent":["import ViewQuestion from '../presentational/ViewQuestion'\r\nimport AnswarePresenterInstance from '../presenter/AnswarePresenter'\r\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport moment from 'moment'\r\n\r\n\r\nfunction SmartViewQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        tags: [],\r\n        createTime:\"\"\r\n    });\r\n    const { index } = useParams();\r\n\r\n    const [text, setText] = useState({\r\n        text: \"\",\r\n        authorUsername: \"Username1\",\r\n        createTime: \"\",\r\n        referenceQuestion: index\r\n    });\r\n\r\n    const [chAnsware, setChAnsware] = useState({\r\n        text: \"\"\r\n    });\r\n\r\n    const onChAnsware = (newValue) => {\r\n        setChAnsware({\r\n            text:newValue\r\n        });\r\n    }\r\n\r\n    const [answares, setAnswares] = useState({\r\n        answares: AnswarePresenterInstance.getAnsware(index)\r\n    });\r\n\r\n    useEffect(() => {\r\n        setQuestion(QuestionPresenterInstance.getQuestionById(index))\r\n    }, []);\r\n\r\n\r\n    const onChangeTextArea = (property, newValue) => {\r\n        setText({\r\n            ...text,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n\r\n\r\n    const onAddAnsware = () => {\r\n        const date = new Date()\r\n        setText({\r\n            ...text,\r\n            createTime: moment(date).format(\"YYYY-MM-DD HH:MM:SS\")\r\n        });\r\n        AnswarePresenterInstance.addAnsware(text);\r\n        setAnswares({\r\n            answares: AnswarePresenterInstance.getAnsware(index)\r\n        })\r\n        \r\n    }\r\n\r\n    const onOpenEditAnsware = (proprety,newValue) => {\r\n        setText({\r\n            ...text,\r\n            [proprety]: newValue\r\n        });\r\n    }\r\n\r\n    const onEditAnsware = () => {\r\n        var answaresi = AnswarePresenterInstance.getAnswares()\r\n        console.log(answaresi.find(element => element.text === chAnsware.text).text)\r\n        var ind = answaresi.indexOf(answaresi.filter(e=> e.text.match(chAnsware.text)))\r\n        console.log(ind)\r\n        AnswarePresenterInstance.editAnsware(ind, text.text);\r\n    }\r\n\r\n    return (<ViewQuestion title={question.title}\r\n        body={question.body}\r\n        createTime={question.createTime}\r\n        tags={question.tags}\r\n        answares={answares.answares}\r\n        text={text.text}\r\n        onChangeTextArea={onChangeTextArea}\r\n        onAddAnsware={onAddAnsware}\r\n        onOpenEditAnsware={onOpenEditAnsware}\r\n        onEditAnsware={onEditAnsware}\r\n        onChAnsware={onChAnsware}\r\n    />\r\n    );\r\n};\r\nexport default SmartViewQuestion\r\n"]},"metadata":{},"sourceType":"module"}