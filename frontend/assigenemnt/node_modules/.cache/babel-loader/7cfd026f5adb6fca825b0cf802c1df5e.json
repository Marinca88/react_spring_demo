{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartCreateQuestion.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport TagPresenterInstance from '../presenter/TagPresenter';\nimport CreateQuestion from '../presentational/CreateQuestion';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartCreateQuestion() {\n  _s();\n\n  const [question, setQuestion] = useState({\n    title: \"\",\n    body: \"\",\n    author: \"\",\n    createTime: \"\",\n    tags: [\"hello\"]\n  });\n  const allTags = TagPresenterInstance.getTags();\n\n  const onChange = (property, newValue) => {\n    setQuestion({ ...question,\n      [property]: newValue\n    });\n  };\n\n  const onAddTag = tag => {\n    setQuestion({ ...question,\n      tags: [...question.tags, tag]\n    });\n  };\n\n  const onChangeTags = tags => {\n    setQuestion({ ...question,\n      tags: tags\n    });\n  };\n\n  const onSave = () => {\n    setQuestion({ ...question,\n      createTime: Date.now().toString,\n      author: AppPresenterInstance.getLoggedUser()\n    });\n    QuestionPresenterInstance.addQuestion(question);\n    window.location.assign(\"#/home\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreateQuestion, {\n    title: question.title,\n    body: question.body,\n    tags: question.tags,\n    allTags: allTags,\n    onChangeTags: onChange,\n    onChangeTags: onChangeTags,\n    onAddTag: onAddTag,\n    onSave: onSave\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n\n_s(SmartCreateQuestion, \"6mE2Y0JCFJI/9lxr3nFTzZk26KU=\");\n\n_c = SmartCreateQuestion;\nexport default SmartCreateQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartCreateQuestion\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartCreateQuestion.js"],"names":["QuestionPresenterInstance","AppPresenterInstance","TagPresenterInstance","CreateQuestion","useState","SmartCreateQuestion","question","setQuestion","title","body","author","createTime","tags","allTags","getTags","onChange","property","newValue","onAddTag","tag","onChangeTags","onSave","Date","now","toString","getLoggedUser","addQuestion","window","location","assign"],"mappings":";;;AAAA,OAAOA,yBAAP,MAAsC,gCAAtC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,oBAAP,MAAiC,2BAAjC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,mBAAT,GAA+B;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACrCI,IAAAA,KAAK,EAAE,EAD8B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,MAAM,EAAE,EAH6B;AAIrCC,IAAAA,UAAU,EAAE,EAJyB;AAKrCC,IAAAA,IAAI,EAAE,CAAC,OAAD;AAL+B,GAAD,CAAxC;AAOA,QAAMC,OAAO,GAAGX,oBAAoB,CAACY,OAArB,EAAhB;;AAGA,QAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrCV,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAER,OAACU,QAAD,GAAYC;AAFJ,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMC,QAAQ,GAAIC,GAAD,IAAS;AACtBZ,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERM,MAAAA,IAAI,EAAE,CAAC,GAAGN,QAAQ,CAACM,IAAb,EAAmBO,GAAnB;AAFE,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMC,YAAY,GAAIR,IAAD,IAAU;AAC3BL,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERM,MAAAA,IAAI,EAACA;AAFG,KAAD,CAAX;AAIH,GALD;;AAOA,QAAMS,MAAM,GAAG,MAAM;AACjBd,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERK,MAAAA,UAAU,EAAEW,IAAI,CAACC,GAAL,GAAWC,QAFf;AAGRd,MAAAA,MAAM,EAAET,oBAAoB,CAACwB,aAArB;AAHA,KAAD,CAAX;AAKAzB,IAAAA,yBAAyB,CAAC0B,WAA1B,CAAsCpB,QAAtC;AACAqB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,QAAvB;AACH,GARD;;AAUA,sBAAO,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEvB,QAAQ,CAACE,KAAhC;AAAuC,IAAA,IAAI,EAAEF,QAAQ,CAACG,IAAtD;AAA4D,IAAA,IAAI,EAAEH,QAAQ,CAACM,IAA3E;AAAiF,IAAA,OAAO,EAAEC,OAA1F;AAAmG,IAAA,YAAY,EAAEE,QAAjH;AAA2H,IAAA,YAAY,EAAEK,YAAzI;AAAuJ,IAAA,QAAQ,EAAEF,QAAjK;AAA2K,IAAA,MAAM,EAAEG;AAAnL;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH;;GA5CQhB,mB;;KAAAA,mB;AA6CT,eAAeA,mBAAf","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport TagPresenterInstance from '../presenter/TagPresenter'\r\nimport CreateQuestion from '../presentational/CreateQuestion'\r\nimport { useState } from 'react';\r\n\r\nfunction SmartCreateQuestion() {\r\n    const [question, setQuestion] = useState({\r\n        title: \"\",\r\n        body: \"\",\r\n        author: \"\",\r\n        createTime: \"\",\r\n        tags: [\"hello\"]\r\n    });\r\n    const allTags = TagPresenterInstance.getTags();\r\n\r\n\r\n    const onChange = (property, newValue) => {\r\n        setQuestion({\r\n            ...question,\r\n            [property]: newValue\r\n        });\r\n    }\r\n\r\n    const onAddTag = (tag) => {\r\n        setQuestion({\r\n            ...question,\r\n            tags: [...question.tags, tag]\r\n        });\r\n    }\r\n\r\n    const onChangeTags = (tags) => {\r\n        setQuestion({\r\n            ...question,\r\n            tags:tags\r\n        });\r\n    }\r\n\r\n    const onSave = () => {\r\n        setQuestion({\r\n            ...question,\r\n            createTime: Date.now().toString,\r\n            author: AppPresenterInstance.getLoggedUser()\r\n        });\r\n        QuestionPresenterInstance.addQuestion(question);\r\n        window.location.assign(\"#/home\");\r\n    }\r\n\r\n    return(<CreateQuestion title={question.title} body={question.body} tags={question.tags} allTags={allTags} onChangeTags={onChange} onChangeTags={onChangeTags} onAddTag={onAddTag} onSave={onSave} />\r\n    );\r\n}\r\nexport default SmartCreateQuestion;"]},"metadata":{},"sourceType":"module"}