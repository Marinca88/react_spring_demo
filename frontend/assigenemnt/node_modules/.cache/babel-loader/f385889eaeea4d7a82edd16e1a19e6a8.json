{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartHome.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresneter from \"../presenter/AppPresenter\";\nimport Home from '../presentational/Home';\nimport VotesPresenterInstance from '../presenter/VotesPresenter';\nimport { useEffect, useState } from 'react';\nimport RestClient from '../rest/RestClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartHome() {\n  _s();\n\n  const [text, setNewText] = useState({\n    text: \"\"\n  });\n  const [questions, setNewQuestions] = useState({\n    questions: []\n  });\n  const [loggedUser, setLoggedUser] = useState({\n    email: \"\",\n    name: \"\",\n    password: \"\",\n    score: 0,\n    username: \"\"\n  });\n  useEffect(() => {\n    AppPresneter.getLoggedUser().then(lgdUser => {\n      console.log(lgdUser);\n      setLoggedUser({ ...lgdUser\n      });\n    });\n    const client = new QuestionPresenterInstance.getQuestion(\"\").then(foundQuestions => {\n      setNewQuestions({\n        questions: [...foundQuestions]\n      });\n    });\n  }, []);\n\n  const onChange = (property, newValue) => {\n    setNewText({\n      [property]: newValue\n    });\n  };\n\n  const onSearch = () => {\n    QuestionPresenterInstance.getQuestionByText(text.text).then(foundQuestions => {\n      setNewQuestions({\n        questions: [...foundQuestions]\n      });\n    });\n  };\n\n  const onSelect = title => {\n    QuestionPresenterInstance.getQuestion().then(foundQuestions => {\n      setNewQuestions({\n        questions: [...foundQuestions]\n      });\n    });\n    var index = questions.questions.indexOf(questions.questions.find(element => element.title === title));\n    window.location.assign(\"/#/question-details/\" + index);\n  };\n\n  const onVote = (ud, title, body, user, createTime, upvotes, downvotes) => {\n    const questionsi = questions.questions;\n    const quest = questionsi.find(q => q.title === title && q.body === body && q.createTime === createTime && q.author === user && q.upvotes === upvotes && q.downvotes === downvotes);\n\n    if (ud === \"up\") {\n      QuestionPresenterInstance.upvote(quest).then(foundQuestions => {\n        setNewQuestions({\n          questions: [...foundQuestions]\n        });\n      }); //console.log(questions.questions);\n    } else {\n      if (ud === \"down\") {\n        QuestionPresenterInstance.downvote(quest).then(foundQuestions => {\n          setNewQuestions({\n            questions: [...foundQuestions]\n          });\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Home, {\n    text: text.text,\n    questions: questions.questions,\n    onSearch: onSearch,\n    onChange: onChange,\n    onSelect: onSelect,\n    onVote: onVote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SmartHome, \"K4B3ZLWRJJk0u58Ou22cBOeEyk0=\");\n\n_c = SmartHome;\nexport default SmartHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartHome\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartHome.js"],"names":["QuestionPresenterInstance","AppPresneter","Home","VotesPresenterInstance","useEffect","useState","RestClient","SmartHome","text","setNewText","questions","setNewQuestions","loggedUser","setLoggedUser","email","name","password","score","username","getLoggedUser","then","lgdUser","console","log","client","getQuestion","foundQuestions","onChange","property","newValue","onSearch","getQuestionByText","onSelect","title","index","indexOf","find","element","window","location","assign","onVote","ud","body","user","createTime","upvotes","downvotes","questionsi","quest","q","author","upvote","downvote"],"mappings":"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","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresneter from \"../presenter/AppPresenter\"\r\nimport Home from '../presentational/Home'\r\nimport VotesPresenterInstance from '../presenter/VotesPresenter'\r\nimport { useEffect, useState } from 'react';\r\nimport RestClient from '../rest/RestClient';\r\n\r\nfunction SmartHome() {\r\n    const [text, setNewText] = useState({\r\n        text:\"\"\r\n    });\r\n    const [questions, setNewQuestions] = useState({\r\n        questions: []\r\n    });\r\n    const [loggedUser, setLoggedUser] = useState({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        score: 0,\r\n        username: \"\"\r\n    })\r\n\r\n    useEffect(() => {\r\n        AppPresneter.getLoggedUser().then(lgdUser => {\r\n            console.log(lgdUser)\r\n            setLoggedUser({\r\n                ...lgdUser\r\n            })\r\n        })\r\n        const client = new \r\n        QuestionPresenterInstance.getQuestion(\"\").then(foundQuestions => {\r\n            setNewQuestions({\r\n                questions: [...foundQuestions]\r\n            }\r\n            )\r\n        });\r\n    }, []);\r\n\r\n\r\n    const onChange = (property, newValue) => {\r\n        setNewText({\r\n            [property]: newValue\r\n        });\r\n    }\r\n    const onSearch = () => {\r\n        QuestionPresenterInstance.getQuestionByText(text.text).then(foundQuestions => {\r\n            setNewQuestions({\r\n                questions: [...foundQuestions]\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    const onSelect = (title) => {\r\n        QuestionPresenterInstance.getQuestion().then(foundQuestions => {\r\n            setNewQuestions({\r\n                questions: [...foundQuestions]\r\n            }\r\n            )\r\n        });\r\n        var index = questions.questions.indexOf(questions.questions.find(element => element.title === title))\r\n        window.location.assign(\"/#/question-details/\" + index)\r\n    }\r\n\r\n    const onVote = (ud, title, body, user, createTime, upvotes, downvotes) => {\r\n        const questionsi = questions.questions\r\n        const quest = questionsi.find(q => q.title === title && q.body === body && q.createTime === createTime && q.author === user && q.upvotes === upvotes && q.downvotes === downvotes );\r\n        if (ud === \"up\") {\r\n            QuestionPresenterInstance.upvote(quest).then(foundQuestions => {\r\n                setNewQuestions({\r\n                    questions: [...foundQuestions]\r\n                })\r\n            });\r\n            //console.log(questions.questions);\r\n\r\n            } else {\r\n                if (ud === \"down\") {\r\n                    QuestionPresenterInstance.downvote(quest).then(foundQuestions => {\r\n                        setNewQuestions({\r\n                            questions: [...foundQuestions]\r\n                        })\r\n                    });\r\n\r\n                }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Home text={text.text}\r\n            questions={questions.questions}\r\n            onSearch={onSearch}\r\n            onChange={onChange}\r\n            onSelect={onSelect}\r\n            onVote={onVote}\r\n            />\r\n        );\r\n}\r\nexport default SmartHome;"]},"metadata":{},"sourceType":"module"}