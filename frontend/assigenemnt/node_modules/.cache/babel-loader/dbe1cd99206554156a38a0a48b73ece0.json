{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iasmina\\\\Desktop\\\\a2\\\\assigenemnt2\\\\src\\\\container\\\\SmartHome.js\",\n    _s = $RefreshSig$();\n\nimport QuestionPresenterInstance from '../presenter/QuestionPresenter';\nimport AppPresenterInstance from '../presenter/AppPresenter';\nimport Home from '../presentational/Home';\nimport VotesPresenterInstance from '../presenter/VotesPresenter';\nimport { useState } from 'react';\nimport UserPresenterInstance from '../presenter/UserPresenter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SmartHome() {\n  _s();\n\n  const [text, setNewText] = useState({\n    text: AppPresenterInstance.getLoggedUser()\n  });\n  const [questions, setNewQuestions] = useState({\n    questions: QuestionPresenterInstance.getQuestion()\n  });\n\n  const onChange = (property, newValue) => {\n    setNewText({\n      [property]: newValue\n    });\n  };\n\n  const onSearch = () => {\n    setNewQuestions({\n      questions: QuestionPresenterInstance.getQuestionByText(text.text)\n    });\n  };\n\n  const onSelect = title => {\n    var questionsi = QuestionPresenterInstance.getQuestion();\n    var index = questionsi.indexOf(questionsi.find(element => element.title === title));\n    window.location.assign(\"/#/question-details/\" + index);\n  };\n\n  const onVote = (ud, text) => {\n    var questionsi = QuestionPresenterInstance.getQuestion();\n    var ind = questionsi.indexOf(questionsi.find(element => element.title === text));\n    var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\");\n    var vote = userVotes.find(item => item.id === ind);\n\n    if (vote === null) {\n      if (ud === \"up\") {\n        QuestionPresenterInstance.upvote(ind);\n      } else {\n        if (ud === \"down\") {\n          QuestionPresenterInstance.downvote(ind);\n        }\n      }\n\n      VotesPresenterInstance.addVote({\n        user: UserPresenterInstance.getLoggedUser(),\n        type: \"question\",\n        id: ind\n      });\n      setNewQuestions({\n        questions: QuestionPresenterInstance.getQuestion()\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Home, {\n    text: text.text,\n    questions: questions.questions,\n    onSearch: onSearch,\n    onChange: onChange,\n    onSelect: onSelect,\n    onVote: onVote\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SmartHome, \"cdcinVHsXeiIJk9txVKPlf0NFo4=\");\n\n_c = SmartHome;\nexport default SmartHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmartHome\");","map":{"version":3,"sources":["C:/Users/Iasmina/Desktop/a2/assigenemnt2/src/container/SmartHome.js"],"names":["QuestionPresenterInstance","AppPresenterInstance","Home","VotesPresenterInstance","useState","UserPresenterInstance","SmartHome","text","setNewText","getLoggedUser","questions","setNewQuestions","getQuestion","onChange","property","newValue","onSearch","getQuestionByText","onSelect","title","questionsi","index","indexOf","find","element","window","location","assign","onVote","ud","ind","userVotes","getVotesBy","vote","item","id","upvote","downvote","addVote","user","type"],"mappings":"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","sourcesContent":["import QuestionPresenterInstance from '../presenter/QuestionPresenter'\r\nimport AppPresenterInstance from '../presenter/AppPresenter'\r\nimport Home from '../presentational/Home'\r\nimport VotesPresenterInstance from '../presenter/VotesPresenter'\r\nimport { useState } from 'react';\r\nimport UserPresenterInstance from '../presenter/UserPresenter';\r\n\r\nfunction SmartHome() {\r\n    const [text, setNewText] = useState({\r\n        text:AppPresenterInstance.getLoggedUser()\r\n    });\r\n    const [questions, setNewQuestions] = useState({\r\n        questions: QuestionPresenterInstance.getQuestion()\r\n    });\r\n\r\n    const onChange = (property, newValue) => {\r\n        setNewText({\r\n            [property]: newValue\r\n        });\r\n    }\r\n    const onSearch = () => {\r\n        setNewQuestions({\r\n            questions: QuestionPresenterInstance.getQuestionByText(text.text)\r\n        });\r\n\r\n    }\r\n\r\n    const onSelect = (title) => {\r\n        var questionsi = QuestionPresenterInstance.getQuestion()\r\n        var index = questionsi.indexOf(questionsi.find(element => element.title === title))\r\n        window.location.assign(\"/#/question-details/\" + index)\r\n    }\r\n\r\n    const onVote = (ud, text) => {\r\n        var questionsi = QuestionPresenterInstance.getQuestion()\r\n        var ind = questionsi.indexOf(questionsi.find(element => element.title === text))\r\n        var userVotes = VotesPresenterInstance.getVotesBy(\"Username1\")\r\n        var vote = userVotes.find(item => item.id === ind)\r\n        if (vote === null) {\r\n            if (ud === \"up\") {\r\n                QuestionPresenterInstance.upvote(ind)\r\n\r\n            } else {\r\n                if (ud === \"down\") {\r\n                    QuestionPresenterInstance.downvote(ind)\r\n                }\r\n            }\r\n            VotesPresenterInstance.addVote({\r\n                user: UserPresenterInstance.getLoggedUser(),\r\n                type: \"question\",\r\n                id: ind\r\n            });\r\n            setNewQuestions({\r\n                questions: QuestionPresenterInstance.getQuestion()\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Home text={text.text}\r\n            questions={questions.questions}\r\n            onSearch={onSearch}\r\n            onChange={onChange}\r\n            onSelect={onSelect}\r\n            onVote={onVote}\r\n            />\r\n        );\r\n}\r\nexport default SmartHome;"]},"metadata":{},"sourceType":"module"}